(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7476],{19347:function(o,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/node-apis/generating-types",function(){return e(23640)}])},23640:function(o,t,e){"use strict";e.r(t),e.d(t,{CH:function(){return a},Page:function(){return i},chCodeConfig:function(){return p},meta:function(){return l}});var r=e(52322),n=e(3905),s=e(65854),c=e(72499),a={annotations:s.ds,Code:s.EK},p={staticMediaQuery:"not screen, (max-width: 768px)",theme:{name:"supabase",type:"from-css",tokenColors:[{scope:["comment","punctuation.definition.comment","string.comment"],settings:{foreground:"var(--ch-1)"}},{scope:["constant","entity.name.constant","variable.other.constant","variable.other.enummember","variable.language","entity"],settings:{foreground:"var(--ch-2)"}},{scope:["entity.name","meta.export.default","meta.definition.variable"],settings:{foreground:"var(--ch-3)"}},{scope:["variable.parameter.function","meta.jsx.children","meta.block","meta.tag.attributes","entity.name.constant","meta.object.member","meta.embedded.expression"],settings:{foreground:"var(--ch-4)"}},{scope:"entity.name.function",settings:{foreground:"var(--ch-5)"}},{scope:["entity.name.tag","support.class.component"],settings:{foreground:"var(--ch-6)"}},{scope:"keyword",settings:{foreground:"var(--ch-7)"}},{scope:["storage","storage.type"],settings:{foreground:"var(--ch-7)"}},{scope:["storage.modifier.package","storage.modifier.import","storage.type.java"],settings:{foreground:"var(--ch-4)"}},{scope:["string","string punctuation.section.embedded source"],settings:{foreground:"var(--ch-8)"}},{scope:"support",settings:{foreground:"var(--ch-2)"}},{scope:"meta.property-name",settings:{foreground:"var(--ch-2)"}},{scope:"variable",settings:{foreground:"var(--ch-3)"}},{scope:"variable.other",settings:{foreground:"var(--ch-4)"}},{scope:"invalid.broken",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.deprecated",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.illegal",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.unimplemented",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"carriage-return",settings:{background:"var(--ch-7)",foreground:"var(--ch-10)",fontStyle:"italic underline"}},{scope:"message.error",settings:{foreground:"var(--ch-9)"}},{scope:"string variable",settings:{foreground:"var(--ch-2)"}},{scope:["source.regexp","string.regexp"],settings:{foreground:"var(--ch-8)"}},{scope:["string.regexp.character-class","string.regexp constant.character.escape","string.regexp source.ruby.embedded","string.regexp string.regexp.arbitrary-repitition"],settings:{foreground:"var(--ch-8)"}},{scope:"string.regexp constant.character.escape",settings:{foreground:"var(--ch-6)",fontStyle:"bold"}},{scope:"support.constant",settings:{foreground:"var(--ch-2)"}},{scope:"support.variable",settings:{foreground:"var(--ch-2)"}},{scope:"support.type.property-name.json",settings:{foreground:"var(--ch-6)"}},{scope:"meta.module-reference",settings:{foreground:"var(--ch-2)"}},{scope:"punctuation.definition.list.begin.markdown",settings:{foreground:"var(--ch-3)"}},{scope:["markup.heading","markup.heading entity.name"],settings:{foreground:"var(--ch-2)",fontStyle:"bold"}},{scope:"markup.quote",settings:{foreground:"var(--ch-6)"}},{scope:"markup.italic",settings:{foreground:"var(--ch-4)",fontStyle:"italic"}},{scope:"markup.bold",settings:{foreground:"var(--ch-4)",fontStyle:"bold"}},{scope:["markup.underline"],settings:{fontStyle:"underline"}},{scope:["markup.strikethrough"],settings:{fontStyle:"strikethrough"}},{scope:"markup.inline.raw",settings:{foreground:"var(--ch-2)"}},{scope:["markup.deleted","meta.diff.header.from-file","punctuation.definition.deleted"],settings:{background:"var(--ch-11)",foreground:"var(--ch-9)"}},{scope:["punctuation.section.embedded"],settings:{foreground:"var(--ch-7)"}},{scope:["markup.inserted","meta.diff.header.to-file","punctuation.definition.inserted"],settings:{background:"var(--ch-12)",foreground:"var(--ch-6)"}},{scope:["markup.changed","punctuation.definition.changed"],settings:{background:"var(--ch-13)",foreground:"var(--ch-3)"}},{scope:["markup.ignored","markup.untracked"],settings:{background:"var(--ch-2)",foreground:"var(--ch-14)"}},{scope:"meta.diff.range",settings:{foreground:"var(--ch-5)",fontStyle:"bold"}},{scope:"meta.diff.header",settings:{foreground:"var(--ch-2)"}},{scope:"meta.separator",settings:{foreground:"var(--ch-2)",fontStyle:"bold"}},{scope:"meta.output",settings:{foreground:"var(--ch-2)"}},{scope:["brackethighlighter.tag","brackethighlighter.curly","brackethighlighter.round","brackethighlighter.square","brackethighlighter.angle","brackethighlighter.quote"],settings:{foreground:"var(--ch-15)"}},{scope:"brackethighlighter.unmatched",settings:{foreground:"var(--ch-9)"}},{scope:["constant.other.reference.link","string.other.link"],settings:{foreground:"var(--ch-8)",fontStyle:"underline"}}],colors:{"editor.background":"var(--ch-16)","editor.foreground":"var(--ch-4)","editor.selectionBackground":"var(--ch-17)","editor.infoForeground":"var(--ch-18)","editor.rangeHighlightBackground":"var(--ch-19)","editorLineNumber.foreground":"var(--ch-20)","tab.activeBackground":"var(--ch-16)","tab.inactiveBackground":"var(--ch-21)","tab.activeForeground":"var(--ch-4)","tab.inactiveForeground":"var(--ch-15)","tab.border":"var(--ch-22)","tab.activeBorder":"var(--ch-16)","tab.activeBorderTop":"var(--ch-23)","tab.hoverBackground":"var(--ch-16)","tab.hoverForeground":"var(--ch-15)","editorGroupHeader.tabsBorder":"var(--ch-22)","editorGroupHeader.tabsBackground":"var(--ch-21)","list.inactiveSelectionBackground":"var(--ch-24)","list.inactiveSelectionForeground":"var(--ch-4)","list.hoverBackground":"var(--ch-25)","list.hoverForeground":"var(--ch-4)"}},lineNumbers:!0,showCopyButton:!0,autoImport:!0,skipLanguages:[],filepath:"/Users/saleemfareed/Documents/hal-docs/apps/docs/pages/guides/node-apis/generating-types.mdx"},l={id:"generating-types",title:"Generating Types",description:"How to generate types for your API and Supabase libraries."},i=function(o){var t=o.children;return(0,r.jsx)(c.Z,{meta:l,children:t})},h=i;function v(o){var t=Object.assign({p:"p",code:"code",h2:"h2",a:"a",ul:"ul",li:"li"},(0,n.ah)(),o.components),e=t.AuthProviders;return e||u("AuthProviders",!0),a||u("CH",!1),a.Code||u("CH.Code",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e,{}),"\n",(0,r.jsxs)(t.p,{children:["Generate types for your project to produce the ",(0,r.jsx)(t.code,{children:"types/supabase.ts"})," file:"]}),"\n",(0,r.jsx)(a.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"npx ",props:{style:{color:"var(--ch-3)"}}},{content:"supabase gen types typescript ",props:{style:{color:"var(--ch-8)"}}},{content:"--project-id ",props:{style:{color:"var(--ch-2)"}}},{content:'"',props:{style:{color:"var(--ch-8)"}}},{content:"$PROJECT_ID",props:{style:{color:"var(--ch-4)"}}},{content:'" ',props:{style:{color:"var(--ch-8)"}}},{content:"--schema ",props:{style:{color:"var(--ch-2)"}}},{content:"public ",props:{style:{color:"var(--ch-8)"}}},{content:"> ",props:{style:{color:"var(--ch-7)"}}},{content:"types/supabase.ts",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["After you have generated your types, you can use them in ",(0,r.jsx)(t.code,{children:"src/index.ts"})]}),"\n",(0,r.jsx)(a.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"import",props:{style:{color:"var(--ch-7)"}}},{content:" { NextApiRequest, NextApiResponse } ",props:{style:{color:"var(--ch-4)"}}},{content:"from ",props:{style:{color:"var(--ch-7)"}}},{content:"'next'",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"import",props:{style:{color:"var(--ch-7)"}}},{content:" { createClient } ",props:{style:{color:"var(--ch-4)"}}},{content:"from ",props:{style:{color:"var(--ch-7)"}}},{content:"'@supabase/supabase-js'",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"import",props:{style:{color:"var(--ch-7)"}}},{content:" { Database } ",props:{style:{color:"var(--ch-4)"}}},{content:"from ",props:{style:{color:"var(--ch-7)"}}},{content:"'../types/supabase'",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"supabase ",props:{style:{color:"var(--ch-2)"}}},{content:"= ",props:{style:{color:"var(--ch-7)"}}},{content:"createClient",props:{style:{color:"var(--ch-5)"}}},{content:"<",props:{style:{color:"var(--ch-4)"}}},{content:"Database",props:{style:{color:"var(--ch-3)"}}},{content:">(",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  process.env.",props:{style:{color:"var(--ch-4)"}}},{content:"NEXT_PUBLIC_SUPABASE_URL",props:{style:{color:"var(--ch-2)"}}},{content:",",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  process.env.",props:{style:{color:"var(--ch-4)"}}},{content:"SUPABASE_SECRET_KEY",props:{style:{color:"var(--ch-2)"}}}]},{tokens:[{content:")",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"export default async",props:{style:{color:"var(--ch-7)"}}},{content:" (req",props:{style:{color:"var(--ch-3)"}}},{content:":",props:{style:{color:"var(--ch-7)"}}},{content:" NextApiRequest, res",props:{style:{color:"var(--ch-3)"}}},{content:":",props:{style:{color:"var(--ch-7)"}}},{content:" NextApiResponse) ",props:{style:{color:"var(--ch-3)"}}},{content:"=> ",props:{style:{color:"var(--ch-7)"}}},{content:"{",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  const ",props:{style:{color:"var(--ch-7)"}}},{content:"allOnlineUsers ",props:{style:{color:"var(--ch-2)"}}},{content:"= await",props:{style:{color:"var(--ch-7)"}}},{content:" supabase.",props:{style:{color:"var(--ch-4)"}}},{content:"from",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}},{content:"'users'",props:{style:{color:"var(--ch-8)"}}},{content:").",props:{style:{color:"var(--ch-4)"}}},{content:"select",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}},{content:"'*'",props:{style:{color:"var(--ch-8)"}}},{content:").",props:{style:{color:"var(--ch-4)"}}},{content:"eq",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}},{content:"'status'",props:{style:{color:"var(--ch-8)"}}},{content:", ",props:{style:{color:"var(--ch-4)"}}},{content:"'ONLINE'",props:{style:{color:"var(--ch-8)"}}},{content:")",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  res.",props:{style:{color:"var(--ch-4)"}}},{content:"status",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}},{content:"200",props:{style:{color:"var(--ch-2)"}}},{content:").",props:{style:{color:"var(--ch-4)"}}},{content:"json",props:{style:{color:"var(--ch-5)"}}},{content:"(allOnlineUsers)",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"}",props:{style:{color:"var(--ch-4)"}}}]}],lang:"tsx"},annotations:[]}]}),"\n",(0,r.jsx)(t.h2,{id:"update-types-automatically-with-github-actions",children:"Update types automatically with GitHub Actions"}),"\n",(0,r.jsx)(t.p,{children:"One way to keep your type definitions in sync with your database is to set up a GitHub action that runs on a schedule."}),"\n",(0,r.jsxs)(t.p,{children:["Add the script above to your ",(0,r.jsx)(t.code,{children:"package.json"})," to run it using ",(0,r.jsx)(t.code,{children:"npm run update-types"})]}),"\n",(0,r.jsx)(a.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:'"update-types"',props:{style:{color:"var(--ch-8)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:'"npx supabase gen types typescript --project-id ',props:{style:{color:"var(--ch-8)"}}},{content:'\\"',props:{style:{color:"var(--ch-2)"}}},{content:"$PROJECT_ID",props:{style:{color:"var(--ch-8)"}}},{content:'\\"',props:{style:{color:"var(--ch-2)"}}},{content:' > types/supabase.ts"',props:{style:{color:"var(--ch-8)"}}}]}],lang:"json"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["Create a file ",(0,r.jsx)(t.code,{children:".github/workflows/update-types.yml"})," with the following snippet to define the action along with the environment variables. This script will commit new type changes to your repo every night."]}),"\n",(0,r.jsx)(a.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"name",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"Update database types",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"on",props:{style:{color:"var(--ch-2)"}}},{content:":",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  schedule",props:{style:{color:"var(--ch-6)"}}},{content:":",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"    # sets the action to run daily. You can modify this to run the action more or less frequently",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"    - ",props:{style:{color:"var(--ch-4)"}}},{content:"cron",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"'0 0 * * *'",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"jobs",props:{style:{color:"var(--ch-6)"}}},{content:":",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  update",props:{style:{color:"var(--ch-6)"}}},{content:":",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"    runs-on",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"ubuntu-latest",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"    env",props:{style:{color:"var(--ch-6)"}}},{content:":",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"      SUPABASE_ACCESS_TOKEN",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"${{ secrets.ACCESS_TOKEN }}",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"      PROJECT_ID",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"<your-project-id>",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"    steps",props:{style:{color:"var(--ch-6)"}}},{content:":",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"      - ",props:{style:{color:"var(--ch-4)"}}},{content:"uses",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"actions/checkout@v2",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"        with",props:{style:{color:"var(--ch-6)"}}},{content:":",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"          persist-credentials",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"false",props:{style:{color:"var(--ch-2)"}}}]},{tokens:[{content:"          fetch-depth",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"0",props:{style:{color:"var(--ch-2)"}}}]},{tokens:[{content:"      - ",props:{style:{color:"var(--ch-4)"}}},{content:"uses",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"actions/setup-node@v2.1.5",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"        with",props:{style:{color:"var(--ch-6)"}}},{content:":",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"          node-version",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"16",props:{style:{color:"var(--ch-2)"}}}]},{tokens:[{content:"      - ",props:{style:{color:"var(--ch-4)"}}},{content:"run",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"npm run update-types",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"      - ",props:{style:{color:"var(--ch-4)"}}},{content:"name",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"check for file changes",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"        id",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"git_status",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"        run",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"|",props:{style:{color:"var(--ch-7)"}}}]},{tokens:[{content:'          echo "::set-output name=status::$(git status -s)"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"      - ",props:{style:{color:"var(--ch-4)"}}},{content:"name",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"Commit files",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"        if",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"${{contains(steps.git_status.outputs.status, ' ')}}",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"        run",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"|",props:{style:{color:"var(--ch-7)"}}}]},{tokens:[{content:"          git add types/database/index.ts",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:'          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:'          git config --local user.name "github-actions[bot]"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:'          git commit -m "Update database types" -a',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"      - ",props:{style:{color:"var(--ch-4)"}}},{content:"name",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"Push changes",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"        if",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"${{contains(steps.git_status.outputs.status, ' ')}}",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"        uses",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"ad-m/github-push-action@master",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"        with",props:{style:{color:"var(--ch-6)"}}},{content:":",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"          github_token",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"${{ secrets.GITHUB_TOKEN }}",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"          branch",props:{style:{color:"var(--ch-6)"}}},{content:": ",props:{style:{color:"var(--ch-4)"}}},{content:"${{ github.ref }}",props:{style:{color:"var(--ch-8)"}}}]}],lang:"yaml"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["Alternatively, you can use a community-supported GitHub action: ",(0,r.jsx)(t.a,{href:"https://github.com/lyqht/generate-supabase-db-types-github-action",children:"generate-supabase-db-types-github-action"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://blog.esteetey.dev/how-to-create-and-test-a-github-action-that-generates-types-from-supabase-database",children:"Generating Supabase types with GitHub Actions"})}),"\n"]})]})}function u(o,t){throw new Error("Expected "+(t?"component":"object")+" `"+o+"` to be defined: you likely forgot to import, pass, or provide it.")}t.default=function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,r.jsx)(h,Object.assign({},o,{children:(0,r.jsx)(v,o)}))}}},function(o){o.O(0,[2331,2499,9774,2888,179],(function(){return t=19347,o(o.s=t);var t}));var t=o.O();_N_E=t}]);