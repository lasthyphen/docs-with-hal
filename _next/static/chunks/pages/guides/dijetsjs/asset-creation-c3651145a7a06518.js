(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6772],{12277:function(t,o,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/dijetsjs/asset-creation",function(){return e(87108)}])},87108:function(t,o,e){"use strict";e.r(o),e.d(o,{CH:function(){return a},Page:function(){return i},chCodeConfig:function(){return l},meta:function(){return p}});var n=e(52322),r=e(3905),s=e(65854),c=e(72499),a={annotations:s.ds,Code:s.EK},l={staticMediaQuery:"not screen, (max-width: 768px)",theme:{name:"supabase",type:"from-css",tokenColors:[{scope:["comment","punctuation.definition.comment","string.comment"],settings:{foreground:"var(--ch-1)"}},{scope:["constant","entity.name.constant","variable.other.constant","variable.other.enummember","variable.language","entity"],settings:{foreground:"var(--ch-2)"}},{scope:["entity.name","meta.export.default","meta.definition.variable"],settings:{foreground:"var(--ch-3)"}},{scope:["variable.parameter.function","meta.jsx.children","meta.block","meta.tag.attributes","entity.name.constant","meta.object.member","meta.embedded.expression"],settings:{foreground:"var(--ch-4)"}},{scope:"entity.name.function",settings:{foreground:"var(--ch-5)"}},{scope:["entity.name.tag","support.class.component"],settings:{foreground:"var(--ch-6)"}},{scope:"keyword",settings:{foreground:"var(--ch-7)"}},{scope:["storage","storage.type"],settings:{foreground:"var(--ch-7)"}},{scope:["storage.modifier.package","storage.modifier.import","storage.type.java"],settings:{foreground:"var(--ch-4)"}},{scope:["string","string punctuation.section.embedded source"],settings:{foreground:"var(--ch-8)"}},{scope:"support",settings:{foreground:"var(--ch-2)"}},{scope:"meta.property-name",settings:{foreground:"var(--ch-2)"}},{scope:"variable",settings:{foreground:"var(--ch-3)"}},{scope:"variable.other",settings:{foreground:"var(--ch-4)"}},{scope:"invalid.broken",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.deprecated",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.illegal",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.unimplemented",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"carriage-return",settings:{background:"var(--ch-7)",foreground:"var(--ch-10)",fontStyle:"italic underline"}},{scope:"message.error",settings:{foreground:"var(--ch-9)"}},{scope:"string variable",settings:{foreground:"var(--ch-2)"}},{scope:["source.regexp","string.regexp"],settings:{foreground:"var(--ch-8)"}},{scope:["string.regexp.character-class","string.regexp constant.character.escape","string.regexp source.ruby.embedded","string.regexp string.regexp.arbitrary-repitition"],settings:{foreground:"var(--ch-8)"}},{scope:"string.regexp constant.character.escape",settings:{foreground:"var(--ch-6)",fontStyle:"bold"}},{scope:"support.constant",settings:{foreground:"var(--ch-2)"}},{scope:"support.variable",settings:{foreground:"var(--ch-2)"}},{scope:"support.type.property-name.json",settings:{foreground:"var(--ch-6)"}},{scope:"meta.module-reference",settings:{foreground:"var(--ch-2)"}},{scope:"punctuation.definition.list.begin.markdown",settings:{foreground:"var(--ch-3)"}},{scope:["markup.heading","markup.heading entity.name"],settings:{foreground:"var(--ch-2)",fontStyle:"bold"}},{scope:"markup.quote",settings:{foreground:"var(--ch-6)"}},{scope:"markup.italic",settings:{foreground:"var(--ch-4)",fontStyle:"italic"}},{scope:"markup.bold",settings:{foreground:"var(--ch-4)",fontStyle:"bold"}},{scope:["markup.underline"],settings:{fontStyle:"underline"}},{scope:["markup.strikethrough"],settings:{fontStyle:"strikethrough"}},{scope:"markup.inline.raw",settings:{foreground:"var(--ch-2)"}},{scope:["markup.deleted","meta.diff.header.from-file","punctuation.definition.deleted"],settings:{background:"var(--ch-11)",foreground:"var(--ch-9)"}},{scope:["punctuation.section.embedded"],settings:{foreground:"var(--ch-7)"}},{scope:["markup.inserted","meta.diff.header.to-file","punctuation.definition.inserted"],settings:{background:"var(--ch-12)",foreground:"var(--ch-6)"}},{scope:["markup.changed","punctuation.definition.changed"],settings:{background:"var(--ch-13)",foreground:"var(--ch-3)"}},{scope:["markup.ignored","markup.untracked"],settings:{background:"var(--ch-2)",foreground:"var(--ch-14)"}},{scope:"meta.diff.range",settings:{foreground:"var(--ch-5)",fontStyle:"bold"}},{scope:"meta.diff.header",settings:{foreground:"var(--ch-2)"}},{scope:"meta.separator",settings:{foreground:"var(--ch-2)",fontStyle:"bold"}},{scope:"meta.output",settings:{foreground:"var(--ch-2)"}},{scope:["brackethighlighter.tag","brackethighlighter.curly","brackethighlighter.round","brackethighlighter.square","brackethighlighter.angle","brackethighlighter.quote"],settings:{foreground:"var(--ch-15)"}},{scope:"brackethighlighter.unmatched",settings:{foreground:"var(--ch-9)"}},{scope:["constant.other.reference.link","string.other.link"],settings:{foreground:"var(--ch-8)",fontStyle:"underline"}}],colors:{"editor.background":"var(--ch-16)","editor.foreground":"var(--ch-4)","editor.selectionBackground":"var(--ch-17)","editor.infoForeground":"var(--ch-18)","editor.rangeHighlightBackground":"var(--ch-19)","editorLineNumber.foreground":"var(--ch-20)","tab.activeBackground":"var(--ch-16)","tab.inactiveBackground":"var(--ch-21)","tab.activeForeground":"var(--ch-4)","tab.inactiveForeground":"var(--ch-15)","tab.border":"var(--ch-22)","tab.activeBorder":"var(--ch-16)","tab.activeBorderTop":"var(--ch-23)","tab.hoverBackground":"var(--ch-16)","tab.hoverForeground":"var(--ch-15)","editorGroupHeader.tabsBorder":"var(--ch-22)","editorGroupHeader.tabsBackground":"var(--ch-21)","list.inactiveSelectionBackground":"var(--ch-24)","list.inactiveSelectionForeground":"var(--ch-4)","list.hoverBackground":"var(--ch-25)","list.hoverForeground":"var(--ch-4)"}},lineNumbers:!0,showCopyButton:!0,autoImport:!0,skipLanguages:[],filepath:"/Users/saleemfareed/Documents/hal-docs/apps/docs/pages/guides/dijetsjs/asset-creation.mdx"},p={id:"dijetsjs-asset-creation",title:"Create an Asset on Value Chain",description:"Learn how to create an asset on Dijets Value Chain",sidebar_label:"Create an asset"},i=function(t){var o=t.children;return(0,n.jsx)(c.Z,{meta:p,children:o})},h=i;function d(t){var o=Object.assign({p:"p",code:"code",h2:"h2",a:"a",ul:"ul",li:"li"},(0,r.ah)(),t.components),e=o.Admonition;return e||v("Admonition",!0),a||v("CH",!1),a.Code||v("CH.Code",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.p,{children:["This example creates an asset on the Value Chain and publishes it to the Dijets\nplatform. The first step in this process is to create an instance of DijetsJS\nconnected to our Dijets platform endpoint of choice. In this example we're\nusing the local network ",(0,n.jsx)(o.code,{children:"12345"}),"."]}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"import",props:{style:{color:"var(--ch-7)"}}},{content:" { Dijets, BN, Buffer } ",props:{style:{color:"var(--ch-4)"}}},{content:"from ",props:{style:{color:"var(--ch-7)"}}},{content:'"dijets"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"import",props:{style:{color:"var(--ch-7)"}}},{content:" {",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  AVMAPI,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  KeyChain,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  UTXOSet,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  UnsignedTx,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  Tx,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  InitialStates,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  SECPMintOutput,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  SECPTransferOutput,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"} ",props:{style:{color:"var(--ch-4)"}}},{content:"from ",props:{style:{color:"var(--ch-7)"}}},{content:'"dijets/dist/apis/avm"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"import",props:{style:{color:"var(--ch-7)"}}},{content:" {",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  PrivateKeyPrefix,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  DefaultLocalGenesisPrivateKey,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"} ",props:{style:{color:"var(--ch-4)"}}},{content:"from ",props:{style:{color:"var(--ch-7)"}}},{content:'"dijets/dist/utils"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"ip",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"string ",props:{style:{color:"var(--ch-2)"}}},{content:"= ",props:{style:{color:"var(--ch-7)"}}},{content:'"localhost"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"port",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"number ",props:{style:{color:"var(--ch-2)"}}},{content:"= ",props:{style:{color:"var(--ch-7)"}}},{content:"9650",props:{style:{color:"var(--ch-2)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"protocol",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"string ",props:{style:{color:"var(--ch-2)"}}},{content:"= ",props:{style:{color:"var(--ch-7)"}}},{content:'"http"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"networkID",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"number ",props:{style:{color:"var(--ch-2)"}}},{content:"= ",props:{style:{color:"var(--ch-7)"}}},{content:"12345 ",props:{style:{color:"var(--ch-2)"}}},{content:"// Dijets Mainnet ID is 1, we want to override that default for local network id",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"dijets",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"Dijets ",props:{style:{color:"var(--ch-3)"}}},{content:"= new ",props:{style:{color:"var(--ch-7)"}}},{content:"Dijets",props:{style:{color:"var(--ch-5)"}}},{content:"(ip, port, protocol, networkID)",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsx)(o.h2,{id:"import-the-pre-funded-address",children:"Import the Pre-funded Address"}),"\n",(0,n.jsxs)(o.p,{children:["Next, lets get an instance of the Value Chain local keychain. The local network ",(0,n.jsx)(o.code,{children:"12345"}),"\nhas a pre-funded address which you can access with the private key\n",(0,n.jsx)(o.code,{children:"PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN"}),". Lastly\nget the pre-funded address as a ",(0,n.jsx)(o.code,{children:"Buffer"})," and as a ",(0,n.jsx)(o.code,{children:"string"}),"."]}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"xchain",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"AVMAPI ",props:{style:{color:"var(--ch-3)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" dijets.",props:{style:{color:"var(--ch-4)"}}},{content:"XChain",props:{style:{color:"var(--ch-5)"}}},{content:"()",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"xKeychain",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"KeyChain ",props:{style:{color:"var(--ch-3)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" xchain.",props:{style:{color:"var(--ch-4)"}}},{content:"keyChain",props:{style:{color:"var(--ch-5)"}}},{content:"()",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"privKey",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"string ",props:{style:{color:"var(--ch-2)"}}},{content:"= ",props:{style:{color:"var(--ch-7)"}}},{content:"`${",props:{style:{color:"var(--ch-8)"}}},{content:"PrivateKeyPrefix",props:{style:{color:"var(--ch-4)"}}},{content:"}${",props:{style:{color:"var(--ch-8)"}}},{content:"DefaultLocalGenesisPrivateKey",props:{style:{color:"var(--ch-4)"}}},{content:"}`",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"xKeychain.",props:{style:{color:"var(--ch-4)"}}},{content:"importKey",props:{style:{color:"var(--ch-5)"}}},{content:"(privKey)",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"xAddresses",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"Buffer",props:{style:{color:"var(--ch-3)"}}},{content:"[] ",props:{style:{color:"var(--ch-4)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" xchain.",props:{style:{color:"var(--ch-4)"}}},{content:"keyChain",props:{style:{color:"var(--ch-5)"}}},{content:"().",props:{style:{color:"var(--ch-4)"}}},{content:"getAddresses",props:{style:{color:"var(--ch-5)"}}},{content:"()",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"xAddressStrings",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"string",props:{style:{color:"var(--ch-2)"}}},{content:"[] ",props:{style:{color:"var(--ch-4)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" xchain.",props:{style:{color:"var(--ch-4)"}}},{content:"keyChain",props:{style:{color:"var(--ch-5)"}}},{content:"().",props:{style:{color:"var(--ch-4)"}}},{content:"getAddressStrings",props:{style:{color:"var(--ch-5)"}}},{content:"()",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsx)(o.h2,{id:"prepare-for-the-mint-output",children:"Prepare for the Mint Output"}),"\n",(0,n.jsxs)(o.p,{children:["Now we need to create an empty array for the ",(0,n.jsx)(o.code,{children:"SECPMintOutput"}),". We also need a\n",(0,n.jsx)(o.code,{children:"threshold"})," and ",(0,n.jsx)(o.code,{children:"locktime"})," for the outputs which we're going to create. Each\nValue Chain transaction can contain a ",(0,n.jsx)(o.code,{children:"memo"})," field of up to 256 bytes of\narbitrary data."]}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"outputs",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"SECPMintOutput",props:{style:{color:"var(--ch-3)"}}},{content:"[] ",props:{style:{color:"var(--ch-4)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" []",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"threshold",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"number ",props:{style:{color:"var(--ch-2)"}}},{content:"= ",props:{style:{color:"var(--ch-7)"}}},{content:"1",props:{style:{color:"var(--ch-2)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"locktime",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"BN ",props:{style:{color:"var(--ch-3)"}}},{content:"= new ",props:{style:{color:"var(--ch-7)"}}},{content:"BN",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}},{content:"0",props:{style:{color:"var(--ch-2)"}}},{content:")",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"memo",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"Buffer ",props:{style:{color:"var(--ch-3)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" Buffer.",props:{style:{color:"var(--ch-4)"}}},{content:"from",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:'  "The Value Chain VM utility method buildCreateAssetTx can be used to create a smart digital asset"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:")",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsx)(o.h2,{id:"describe-the-new-asset",children:"Describe the New Asset"}),"\n",(0,n.jsx)(o.p,{children:"The first step in creating a new asset using DijetsJS is to provide the specifics of the asset.\nLet's give the asset a name, a ticker symbol, and a denomination."}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"name",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"string ",props:{style:{color:"var(--ch-2)"}}},{content:"= ",props:{style:{color:"var(--ch-7)"}}},{content:'"MimoToken"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"symbol",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"string ",props:{style:{color:"var(--ch-2)"}}},{content:"= ",props:{style:{color:"var(--ch-7)"}}},{content:'"MTT"',props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"denomination",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"number ",props:{style:{color:"var(--ch-2)"}}},{content:"= ",props:{style:{color:"var(--ch-7)"}}},{content:"3",props:{style:{color:"var(--ch-2)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsx)(o.h2,{id:"set-up-async--await",children:"Set Up Async / Await"}),"\n",(0,n.jsxs)(o.p,{children:["The remaining code will be encapsulated by this ",(0,n.jsx)(o.code,{children:"main"})," function so that the ",(0,n.jsx)(o.code,{children:"async"})," / ",(0,n.jsx)(o.code,{children:"await"})," pattern can be setup and utilised."]}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"main ",props:{style:{color:"var(--ch-5)"}}},{content:"= async",props:{style:{color:"var(--ch-7)"}}},{content:" ()",props:{style:{color:"var(--ch-4)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"Promise",props:{style:{color:"var(--ch-3)"}}},{content:"<",props:{style:{color:"var(--ch-4)"}}},{content:"any",props:{style:{color:"var(--ch-2)"}}},{content:"> ",props:{style:{color:"var(--ch-4)"}}},{content:"=>",props:{style:{color:"var(--ch-7)"}}},{content:" {}",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"main",props:{style:{color:"var(--ch-5)"}}},{content:"()",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsx)(o.h2,{id:"fetch-the-utxo",children:"Fetch the UTXO"}),"\n",(0,n.jsxs)(o.p,{children:["Pass the ",(0,n.jsx)(o.code,{children:"xAddressStrings"})," to ",(0,n.jsx)(o.code,{children:"xchain.getUTXOs"})," to fetch the UTXO."]}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"avmUTXOResponse",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"any ",props:{style:{color:"var(--ch-2)"}}},{content:"= await",props:{style:{color:"var(--ch-7)"}}},{content:" xchain.",props:{style:{color:"var(--ch-4)"}}},{content:"getUTXOs",props:{style:{color:"var(--ch-5)"}}},{content:"(xAddressStrings)",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"utxoSet",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"UTXOSet ",props:{style:{color:"var(--ch-3)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" avmUTXOResponse.utxos",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsx)(o.h2,{id:"creating-the-initial-state",children:"Creating the Initial State"}),"\n",(0,n.jsx)(o.p,{children:"We want to mint an asset with 786 units held by the managed key. This sets up\nthe state that will result from the Create Asset transaction."}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Create outputs for the asset's initial state",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"amount",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"BN ",props:{style:{color:"var(--ch-3)"}}},{content:"= new ",props:{style:{color:"var(--ch-7)"}}},{content:"BN",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}},{content:"786",props:{style:{color:"var(--ch-2)"}}},{content:")",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"vcapSecpOutput",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"SECPTransferOutput ",props:{style:{color:"var(--ch-3)"}}},{content:"= new ",props:{style:{color:"var(--ch-7)"}}},{content:"SECPTransferOutput",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  amount,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  xAddresses,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  locktime,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  threshold",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:")",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"initialStates",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"InitialStates ",props:{style:{color:"var(--ch-3)"}}},{content:"= new ",props:{style:{color:"var(--ch-7)"}}},{content:"InitialStates",props:{style:{color:"var(--ch-5)"}}},{content:"()",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"// Populate the initialStates with the outputs",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"initialStates.",props:{style:{color:"var(--ch-4)"}}},{content:"addOutput",props:{style:{color:"var(--ch-5)"}}},{content:"(vcapSecpOutput)",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsx)(o.h2,{id:"create-the-mint-output",children:"Create the Mint Output"}),"\n",(0,n.jsxs)(o.p,{children:["We also want to create a ",(0,n.jsx)(o.code,{children:"SECPMintOutput"})," so that we can mint more of this asset later."]}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"secpMintOutput",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"SECPMintOutput ",props:{style:{color:"var(--ch-3)"}}},{content:"= new ",props:{style:{color:"var(--ch-7)"}}},{content:"SECPMintOutput",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  xAddresses,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  locktime,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  threshold",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:")",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"outputs.",props:{style:{color:"var(--ch-4)"}}},{content:"push",props:{style:{color:"var(--ch-5)"}}},{content:"(secpMintOutput)",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsx)(o.h2,{id:"creating-the-signed-transaction",children:"Creating the Signed Transaction"}),"\n",(0,n.jsxs)(o.p,{children:["Now that we know what we want an asset to look like, we create a transaction to\nsend to the network. There is a Value Chain VM helper function ",(0,n.jsx)(o.code,{children:"buildCreateAssetTx()"}),"\nwhich does just that."]}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"unsignedTx",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"UnsignedTx ",props:{style:{color:"var(--ch-3)"}}},{content:"= await",props:{style:{color:"var(--ch-7)"}}},{content:" xchain.",props:{style:{color:"var(--ch-4)"}}},{content:"buildCreateAssetTx",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  utxoSet,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  xAddressStrings,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  xAddressStrings,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  initialStates,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  name,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  symbol,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  denomination,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  outputs,",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  memo",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:")",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsx)(o.h2,{id:"sign-and-issue-the-transaction",children:"Sign and Issue the Transaction"}),"\n",(0,n.jsx)(o.p,{children:"Now let's sign the transaction and issue it to the Dijets network. If\nsuccessful it will return a\nCB58 (concatenation of the data bytes and a checksum) serialized\nstring for the transaction ID."}),"\n",(0,n.jsx)(e,{type:"info",children:(0,n.jsxs)(o.p,{children:["CB58 is a format used to represent keys, addresses, and other binary values in web wallets and APIs.\nCB58 is similar to ",(0,n.jsx)(o.a,{href:"https://en.bitcoin.it/wiki/Base58Check_encoding",children:"Base58Check"})," but uses a different checksum algorithm."]})}),"\n",(0,n.jsx)(o.p,{children:"Now that we have a signed transaction ready to send to the network, let\u2019s issue it!"}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"tx",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"Tx ",props:{style:{color:"var(--ch-3)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" unsignedTx.",props:{style:{color:"var(--ch-4)"}}},{content:"sign",props:{style:{color:"var(--ch-5)"}}},{content:"(xKeychain)",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"txid",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"string ",props:{style:{color:"var(--ch-2)"}}},{content:"= await",props:{style:{color:"var(--ch-7)"}}},{content:" xchain.",props:{style:{color:"var(--ch-4)"}}},{content:"issueTx",props:{style:{color:"var(--ch-5)"}}},{content:"(tx)",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"console.",props:{style:{color:"var(--ch-4)"}}},{content:"log",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}},{content:"`Success! TXID: ${",props:{style:{color:"var(--ch-8)"}}},{content:"txid",props:{style:{color:"var(--ch-4)"}}},{content:"}`",props:{style:{color:"var(--ch-8)"}}},{content:")",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsx)(o.h2,{id:"get-the-status-of-the-transaction",children:"Get the Status of the Transaction"}),"\n",(0,n.jsx)(o.p,{children:"Now that we sent the transaction to the network, it takes a few seconds to\ndetermine if the transaction has gone through. We can get an updated status on\nthe transaction using the transaction ID through the AVM API."}),"\n",(0,n.jsx)(a.Code,{codeConfig:l,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:'// returns one of: "Accepted", "Processing", "Unknown", and "Rejected"',props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"status",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"string ",props:{style:{color:"var(--ch-2)"}}},{content:"= await",props:{style:{color:"var(--ch-7)"}}},{content:" xchain.",props:{style:{color:"var(--ch-4)"}}},{content:"getTxStatus",props:{style:{color:"var(--ch-5)"}}},{content:"(id)",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,n.jsxs)(o.p,{children:["The statuses can be one of ",(0,n.jsx)(o.code,{children:"Accepted"}),", ",(0,n.jsx)(o.code,{children:"Processing"}),", ",(0,n.jsx)(o.code,{children:"Unknown"}),", and ",(0,n.jsx)(o.code,{children:"Rejected"})]}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:'"Accepted" indicates that the transaction has been accepted as valid by the network and executed'}),"\n",(0,n.jsx)(o.li,{children:'"Processing" indicates that the transaction is being voted on.'}),"\n",(0,n.jsx)(o.li,{children:'"Unknown" indicates that node knows nothing about the transaction, indicating\nthe node doesn\u2019t have it'}),"\n",(0,n.jsx)(o.li,{children:'"Rejected" indicates the node knows about the transaction, but it conflicted with an accepted transaction'}),"\n"]}),"\n",(0,n.jsx)(o.h2,{id:"identifying-the-newly-created-asset",children:"Identifying the Newly Created Asset"}),"\n",(0,n.jsx)(o.p,{children:'The Value Chain uses the transaction ID of the transaction which created the asset\nas the unique identifier for the asset. This unique identifier is henceforth\nknown as the "AssetID" of the asset. When assets are traded around the Value Chain,\nthey always reference the AssetID that they represent.'}),"\n",(0,n.jsx)(e,{type:"info",children:(0,n.jsxs)(o.p,{children:["The AssetID of Dijets native cryptocurrency DJTX is ",(0,n.jsx)(o.code,{children:"wjcHr7ng1qPXeJm5Mh3HzQxqz2S9AGo9UVP78jxh5zfirZxY7"})]})})]})}function v(t,o){throw new Error("Expected "+(o?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}o.default=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,n.jsx)(h,Object.assign({},t,{children:(0,n.jsx)(d,t)}))}}},function(t){t.O(0,[2331,2499,9774,2888,179],(function(){return o=12277,t(t.s=o);var o}));var o=t.O();_N_E=o}]);