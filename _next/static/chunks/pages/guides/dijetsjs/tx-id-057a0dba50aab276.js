(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1301],{26128:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/dijetsjs/tx-id",function(){return o(61559)}])},61559:function(e,t,o){"use strict";o.r(t),o.d(t,{CH:function(){return a},Page:function(){return l},chCodeConfig:function(){return i},meta:function(){return h}});var r=o(52322),n=o(3905),c=o(65854),s=o(72499),a={annotations:c.ds,Code:c.EK},i={staticMediaQuery:"not screen, (max-width: 768px)",theme:{name:"supabase",type:"from-css",tokenColors:[{scope:["comment","punctuation.definition.comment","string.comment"],settings:{foreground:"var(--ch-1)"}},{scope:["constant","entity.name.constant","variable.other.constant","variable.other.enummember","variable.language","entity"],settings:{foreground:"var(--ch-2)"}},{scope:["entity.name","meta.export.default","meta.definition.variable"],settings:{foreground:"var(--ch-3)"}},{scope:["variable.parameter.function","meta.jsx.children","meta.block","meta.tag.attributes","entity.name.constant","meta.object.member","meta.embedded.expression"],settings:{foreground:"var(--ch-4)"}},{scope:"entity.name.function",settings:{foreground:"var(--ch-5)"}},{scope:["entity.name.tag","support.class.component"],settings:{foreground:"var(--ch-6)"}},{scope:"keyword",settings:{foreground:"var(--ch-7)"}},{scope:["storage","storage.type"],settings:{foreground:"var(--ch-7)"}},{scope:["storage.modifier.package","storage.modifier.import","storage.type.java"],settings:{foreground:"var(--ch-4)"}},{scope:["string","string punctuation.section.embedded source"],settings:{foreground:"var(--ch-8)"}},{scope:"support",settings:{foreground:"var(--ch-2)"}},{scope:"meta.property-name",settings:{foreground:"var(--ch-2)"}},{scope:"variable",settings:{foreground:"var(--ch-3)"}},{scope:"variable.other",settings:{foreground:"var(--ch-4)"}},{scope:"invalid.broken",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.deprecated",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.illegal",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.unimplemented",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"carriage-return",settings:{background:"var(--ch-7)",foreground:"var(--ch-10)",fontStyle:"italic underline"}},{scope:"message.error",settings:{foreground:"var(--ch-9)"}},{scope:"string variable",settings:{foreground:"var(--ch-2)"}},{scope:["source.regexp","string.regexp"],settings:{foreground:"var(--ch-8)"}},{scope:["string.regexp.character-class","string.regexp constant.character.escape","string.regexp source.ruby.embedded","string.regexp string.regexp.arbitrary-repitition"],settings:{foreground:"var(--ch-8)"}},{scope:"string.regexp constant.character.escape",settings:{foreground:"var(--ch-6)",fontStyle:"bold"}},{scope:"support.constant",settings:{foreground:"var(--ch-2)"}},{scope:"support.variable",settings:{foreground:"var(--ch-2)"}},{scope:"support.type.property-name.json",settings:{foreground:"var(--ch-6)"}},{scope:"meta.module-reference",settings:{foreground:"var(--ch-2)"}},{scope:"punctuation.definition.list.begin.markdown",settings:{foreground:"var(--ch-3)"}},{scope:["markup.heading","markup.heading entity.name"],settings:{foreground:"var(--ch-2)",fontStyle:"bold"}},{scope:"markup.quote",settings:{foreground:"var(--ch-6)"}},{scope:"markup.italic",settings:{foreground:"var(--ch-4)",fontStyle:"italic"}},{scope:"markup.bold",settings:{foreground:"var(--ch-4)",fontStyle:"bold"}},{scope:["markup.underline"],settings:{fontStyle:"underline"}},{scope:["markup.strikethrough"],settings:{fontStyle:"strikethrough"}},{scope:"markup.inline.raw",settings:{foreground:"var(--ch-2)"}},{scope:["markup.deleted","meta.diff.header.from-file","punctuation.definition.deleted"],settings:{background:"var(--ch-11)",foreground:"var(--ch-9)"}},{scope:["punctuation.section.embedded"],settings:{foreground:"var(--ch-7)"}},{scope:["markup.inserted","meta.diff.header.to-file","punctuation.definition.inserted"],settings:{background:"var(--ch-12)",foreground:"var(--ch-6)"}},{scope:["markup.changed","punctuation.definition.changed"],settings:{background:"var(--ch-13)",foreground:"var(--ch-3)"}},{scope:["markup.ignored","markup.untracked"],settings:{background:"var(--ch-2)",foreground:"var(--ch-14)"}},{scope:"meta.diff.range",settings:{foreground:"var(--ch-5)",fontStyle:"bold"}},{scope:"meta.diff.header",settings:{foreground:"var(--ch-2)"}},{scope:"meta.separator",settings:{foreground:"var(--ch-2)",fontStyle:"bold"}},{scope:"meta.output",settings:{foreground:"var(--ch-2)"}},{scope:["brackethighlighter.tag","brackethighlighter.curly","brackethighlighter.round","brackethighlighter.square","brackethighlighter.angle","brackethighlighter.quote"],settings:{foreground:"var(--ch-15)"}},{scope:"brackethighlighter.unmatched",settings:{foreground:"var(--ch-9)"}},{scope:["constant.other.reference.link","string.other.link"],settings:{foreground:"var(--ch-8)",fontStyle:"underline"}}],colors:{"editor.background":"var(--ch-16)","editor.foreground":"var(--ch-4)","editor.selectionBackground":"var(--ch-17)","editor.infoForeground":"var(--ch-18)","editor.rangeHighlightBackground":"var(--ch-19)","editorLineNumber.foreground":"var(--ch-20)","tab.activeBackground":"var(--ch-16)","tab.inactiveBackground":"var(--ch-21)","tab.activeForeground":"var(--ch-4)","tab.inactiveForeground":"var(--ch-15)","tab.border":"var(--ch-22)","tab.activeBorder":"var(--ch-16)","tab.activeBorderTop":"var(--ch-23)","tab.hoverBackground":"var(--ch-16)","tab.hoverForeground":"var(--ch-15)","editorGroupHeader.tabsBorder":"var(--ch-22)","editorGroupHeader.tabsBackground":"var(--ch-21)","list.inactiveSelectionBackground":"var(--ch-24)","list.inactiveSelectionForeground":"var(--ch-4)","list.hoverBackground":"var(--ch-25)","list.hoverForeground":"var(--ch-4)"}},lineNumbers:!0,showCopyButton:!0,autoImport:!0,skipLanguages:[],filepath:"/Users/saleemfareed/Documents/hal-docs/apps/docs/pages/guides/dijetsjs/tx-id.mdx"},h={id:"dijetsjs-tx-id",title:"Generate a TxID Using DijetsJS",description:"Generate a TxID Using DijetsJS"},l=function(e){var t=e.children;return(0,r.jsx)(s.Z,{meta:h,children:t})},p=l;function d(e){var t=Object.assign({h2:"h2",p:"p",a:"a",code:"code"},(0,n.ah)(),e.components);return a||g("CH",!1),a.Code||g("CH.Code",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(t.p,{children:["A transaction id, or TxID, is a string of numbers and letters which identifies a\nspecific transaction on the blockchain. TXIDs are one of the key\ncomponents that developers interact with when working on a blockchain system.\nThey're deterministic and can be generated using\n",(0,r.jsx)(t.a,{href:"/guides/nodes",children:"DijetsNodeGo"})," or\n",(0,r.jsx)(t.a,{href:"/guides/dijetsjs",children:"DijetsJS"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["On Dijets network a TxID is a CB58 encoded string which is created by\n",(0,r.jsx)(t.code,{children:"sha256"})," hashing the transaction.\nCB58 is a base58\nencoding with a checksum. Below are the steps for deterministically generating a\nTxID using DijetsJS."]}),"\n",(0,r.jsx)(t.h2,{id:"creating-a-signed-transaction",children:"Creating a Signed Transaction"}),"\n",(0,r.jsxs)(t.p,{children:["Let's start by creating a\n",(0,r.jsx)(t.a,{href:"transaction-format#what-base-tx-contains",children:"BaseTx"}),".\nOnce you have a ",(0,r.jsx)(t.code,{children:"BaseTx"})," then\ncreate an ",(0,r.jsx)(t.code,{children:"UnsignedTx"})," and ",(0,r.jsx)(t.code,{children:"sign"})," it. Lastly convert the ",(0,r.jsx)(t.code,{children:"Tx"})," to a ",(0,r.jsx)(t.code,{children:"Buffer"})," by\ncalling ",(0,r.jsx)(t.code,{children:"tx.toBuffer()"}),"."]}),"\n",(0,r.jsx)(a.Code,{codeConfig:i,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Create an UnsignedTx with the BaseTx",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"unsignedTx",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"UnsignedTx ",props:{style:{color:"var(--ch-3)"}}},{content:"= new ",props:{style:{color:"var(--ch-7)"}}},{content:"UnsignedTx",props:{style:{color:"var(--ch-5)"}}},{content:"(baseTx)",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"// Sign the UnsignedTx to create a Tx",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"tx",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"Tx ",props:{style:{color:"var(--ch-3)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" unsignedTx.",props:{style:{color:"var(--ch-4)"}}},{content:"sign",props:{style:{color:"var(--ch-5)"}}},{content:"(xKeychain)",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"// Convert the Tx to a Buffer",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"txBuf",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"Buffer ",props:{style:{color:"var(--ch-3)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" tx.",props:{style:{color:"var(--ch-4)"}}},{content:"toBuffer",props:{style:{color:"var(--ch-5)"}}},{content:"()",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,r.jsx)(t.h2,{id:"generate-the-txid",children:"Generate the TxID"}),"\n",(0,r.jsxs)(t.p,{children:["Next, create a ",(0,r.jsx)(t.code,{children:"sha256"})," hash of the ",(0,r.jsx)(t.code,{children:"Buffer"})," from the previous step."]}),"\n",(0,r.jsx)(a.Code,{codeConfig:i,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// Create sha256 hash of the Tx Buffer",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"sha256Hash",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"Buffer ",props:{style:{color:"var(--ch-3)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" Buffer.",props:{style:{color:"var(--ch-4)"}}},{content:"from",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"  createHash",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}},{content:'"sha256"',props:{style:{color:"var(--ch-8)"}}},{content:").",props:{style:{color:"var(--ch-4)"}}},{content:"update",props:{style:{color:"var(--ch-5)"}}},{content:"(txBuf).",props:{style:{color:"var(--ch-4)"}}},{content:"digest",props:{style:{color:"var(--ch-5)"}}},{content:"().buffer",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:")",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["As mentioned in the ",(0,r.jsx)(t.a,{href:"#introduction",children:"Introduction"}),", a TxID is a CB58 encoded\nstring which is created by ",(0,r.jsx)(t.code,{children:"sha256"})," hashing the transaction. To create the TxID\nnow CB58 encode the newly created ",(0,r.jsx)(t.code,{children:"sha256"})," hash."]}),"\n",(0,r.jsx)(a.Code,{codeConfig:i,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// cb58 the sha256 hash",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"generatedTxID",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"string ",props:{style:{color:"var(--ch-2)"}}},{content:"=",props:{style:{color:"var(--ch-7)"}}},{content:" bintools.",props:{style:{color:"var(--ch-4)"}}},{content:"cb58Encode",props:{style:{color:"var(--ch-5)"}}},{content:"(sha256Hash)",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"console.",props:{style:{color:"var(--ch-4)"}}},{content:"log",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}},{content:"`Generated TxID: ${",props:{style:{color:"var(--ch-8)"}}},{content:"generatedTxID",props:{style:{color:"var(--ch-4)"}}},{content:"}`",props:{style:{color:"var(--ch-8)"}}},{content:")",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"generatedTxID"})," will be a CB58 encoded string similar to ",(0,r.jsx)(t.code,{children:"eLXEKFFMgGmK7ZLokCFjppdBfGy5hDuRqh5uJVyXXPaRErpAX"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"confirm-txid-is-correct",children:"Confirm TxID Is Correct"}),"\n",(0,r.jsxs)(t.p,{children:["To confirm that the ",(0,r.jsx)(t.code,{children:"generatedTxID"})," is correct issue the ",(0,r.jsx)(t.code,{children:"BaseTx"})," to DijetsNodeGo\nand compare the TxID which is returned with the recently created TxID."]}),"\n",(0,r.jsx)(a.Code,{codeConfig:i,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"// get the actual txID from the full node",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"const ",props:{style:{color:"var(--ch-7)"}}},{content:"actualTxID",props:{style:{color:"var(--ch-2)"}}},{content:": ",props:{style:{color:"var(--ch-7)"}}},{content:"string ",props:{style:{color:"var(--ch-2)"}}},{content:"= await",props:{style:{color:"var(--ch-7)"}}},{content:" xchain.",props:{style:{color:"var(--ch-4)"}}},{content:"issueTx",props:{style:{color:"var(--ch-5)"}}},{content:"(tx)",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"console.",props:{style:{color:"var(--ch-4)"}}},{content:"log",props:{style:{color:"var(--ch-5)"}}},{content:"(",props:{style:{color:"var(--ch-4)"}}},{content:"`Success! TxID: ${",props:{style:{color:"var(--ch-8)"}}},{content:"actualTxID",props:{style:{color:"var(--ch-4)"}}},{content:"}`",props:{style:{color:"var(--ch-8)"}}},{content:")",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"// Note the generated TxID and the returned TxID match",props:{style:{color:"var(--ch-1)"}}}]},{tokens:[{content:"Generated ",props:{style:{color:"var(--ch-4)"}}},{content:"TXID",props:{style:{color:"var(--ch-3)"}}},{content:": eLXEKFFMgGmK7ZLokCFjppdBfGy5hDuRqh5uJVyXXPaRErpAX",props:{style:{color:"var(--ch-4)"}}}]},{tokens:[{content:"Returned ",props:{style:{color:"var(--ch-4)"}}},{content:"TXID",props:{style:{color:"var(--ch-3)"}}},{content:": eLXEKFFMgGmK7ZLokCFjppdBfGy5hDuRqh5uJVyXXPaRErpAX",props:{style:{color:"var(--ch-4)"}}}]}],lang:"ts"},annotations:[]}]}),"\n",(0,r.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsxs)(t.p,{children:["TXIDs are a core component of any blockchain system. They are used extensively\nin Dijets when creating transactions, issuing new assets and creating enterprise chains or subnetworks.\nTXIDs are deterministically created by ",(0,r.jsx)(t.code,{children:"sha256"})," hashing\na ",(0,r.jsx)(t.code,{children:"Buffer"})," of the transaction and then CB58 encoding the hash."]})]})}function g(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,r.jsx)(p,Object.assign({},e,{children:(0,r.jsx)(d,e)}))}}},function(e){e.O(0,[2331,2499,9774,2888,179],(function(){return t=26128,e(e.s=t);var t}));var t=e.O();_N_E=t}]);