(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7429],{38800:function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/nodes/node-backup-restore",function(){return t(49151)}])},49151:function(e,o,t){"use strict";t.r(o),t.d(o,{CH:function(){return i},Page:function(){return h},chCodeConfig:function(){return c},meta:function(){return d}});var n=t(52322),s=t(3905),r=t(65854),a=t(72499),i={annotations:r.ds,Code:r.EK},c={staticMediaQuery:"not screen, (max-width: 768px)",theme:{name:"supabase",type:"from-css",tokenColors:[{scope:["comment","punctuation.definition.comment","string.comment"],settings:{foreground:"var(--ch-1)"}},{scope:["constant","entity.name.constant","variable.other.constant","variable.other.enummember","variable.language","entity"],settings:{foreground:"var(--ch-2)"}},{scope:["entity.name","meta.export.default","meta.definition.variable"],settings:{foreground:"var(--ch-3)"}},{scope:["variable.parameter.function","meta.jsx.children","meta.block","meta.tag.attributes","entity.name.constant","meta.object.member","meta.embedded.expression"],settings:{foreground:"var(--ch-4)"}},{scope:"entity.name.function",settings:{foreground:"var(--ch-5)"}},{scope:["entity.name.tag","support.class.component"],settings:{foreground:"var(--ch-6)"}},{scope:"keyword",settings:{foreground:"var(--ch-7)"}},{scope:["storage","storage.type"],settings:{foreground:"var(--ch-7)"}},{scope:["storage.modifier.package","storage.modifier.import","storage.type.java"],settings:{foreground:"var(--ch-4)"}},{scope:["string","string punctuation.section.embedded source"],settings:{foreground:"var(--ch-8)"}},{scope:"support",settings:{foreground:"var(--ch-2)"}},{scope:"meta.property-name",settings:{foreground:"var(--ch-2)"}},{scope:"variable",settings:{foreground:"var(--ch-3)"}},{scope:"variable.other",settings:{foreground:"var(--ch-4)"}},{scope:"invalid.broken",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.deprecated",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.illegal",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.unimplemented",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"carriage-return",settings:{background:"var(--ch-7)",foreground:"var(--ch-10)",fontStyle:"italic underline"}},{scope:"message.error",settings:{foreground:"var(--ch-9)"}},{scope:"string variable",settings:{foreground:"var(--ch-2)"}},{scope:["source.regexp","string.regexp"],settings:{foreground:"var(--ch-8)"}},{scope:["string.regexp.character-class","string.regexp constant.character.escape","string.regexp source.ruby.embedded","string.regexp string.regexp.arbitrary-repitition"],settings:{foreground:"var(--ch-8)"}},{scope:"string.regexp constant.character.escape",settings:{foreground:"var(--ch-6)",fontStyle:"bold"}},{scope:"support.constant",settings:{foreground:"var(--ch-2)"}},{scope:"support.variable",settings:{foreground:"var(--ch-2)"}},{scope:"support.type.property-name.json",settings:{foreground:"var(--ch-6)"}},{scope:"meta.module-reference",settings:{foreground:"var(--ch-2)"}},{scope:"punctuation.definition.list.begin.markdown",settings:{foreground:"var(--ch-3)"}},{scope:["markup.heading","markup.heading entity.name"],settings:{foreground:"var(--ch-2)",fontStyle:"bold"}},{scope:"markup.quote",settings:{foreground:"var(--ch-6)"}},{scope:"markup.italic",settings:{foreground:"var(--ch-4)",fontStyle:"italic"}},{scope:"markup.bold",settings:{foreground:"var(--ch-4)",fontStyle:"bold"}},{scope:["markup.underline"],settings:{fontStyle:"underline"}},{scope:["markup.strikethrough"],settings:{fontStyle:"strikethrough"}},{scope:"markup.inline.raw",settings:{foreground:"var(--ch-2)"}},{scope:["markup.deleted","meta.diff.header.from-file","punctuation.definition.deleted"],settings:{background:"var(--ch-11)",foreground:"var(--ch-9)"}},{scope:["punctuation.section.embedded"],settings:{foreground:"var(--ch-7)"}},{scope:["markup.inserted","meta.diff.header.to-file","punctuation.definition.inserted"],settings:{background:"var(--ch-12)",foreground:"var(--ch-6)"}},{scope:["markup.changed","punctuation.definition.changed"],settings:{background:"var(--ch-13)",foreground:"var(--ch-3)"}},{scope:["markup.ignored","markup.untracked"],settings:{background:"var(--ch-2)",foreground:"var(--ch-14)"}},{scope:"meta.diff.range",settings:{foreground:"var(--ch-5)",fontStyle:"bold"}},{scope:"meta.diff.header",settings:{foreground:"var(--ch-2)"}},{scope:"meta.separator",settings:{foreground:"var(--ch-2)",fontStyle:"bold"}},{scope:"meta.output",settings:{foreground:"var(--ch-2)"}},{scope:["brackethighlighter.tag","brackethighlighter.curly","brackethighlighter.round","brackethighlighter.square","brackethighlighter.angle","brackethighlighter.quote"],settings:{foreground:"var(--ch-15)"}},{scope:"brackethighlighter.unmatched",settings:{foreground:"var(--ch-9)"}},{scope:["constant.other.reference.link","string.other.link"],settings:{foreground:"var(--ch-8)",fontStyle:"underline"}}],colors:{"editor.background":"var(--ch-16)","editor.foreground":"var(--ch-4)","editor.selectionBackground":"var(--ch-17)","editor.infoForeground":"var(--ch-18)","editor.rangeHighlightBackground":"var(--ch-19)","editorLineNumber.foreground":"var(--ch-20)","tab.activeBackground":"var(--ch-16)","tab.inactiveBackground":"var(--ch-21)","tab.activeForeground":"var(--ch-4)","tab.inactiveForeground":"var(--ch-15)","tab.border":"var(--ch-22)","tab.activeBorder":"var(--ch-16)","tab.activeBorderTop":"var(--ch-23)","tab.hoverBackground":"var(--ch-16)","tab.hoverForeground":"var(--ch-15)","editorGroupHeader.tabsBorder":"var(--ch-22)","editorGroupHeader.tabsBackground":"var(--ch-21)","list.inactiveSelectionBackground":"var(--ch-24)","list.inactiveSelectionForeground":"var(--ch-4)","list.hoverBackground":"var(--ch-25)","list.hoverForeground":"var(--ch-4)"}},lineNumbers:!0,showCopyButton:!0,autoImport:!0,skipLanguages:[],filepath:"/Users/saleemfareed/Documents/hal-docs/apps/docs/pages/guides/nodes/node-backup-restore.mdx"},d={id:"nodes-node-backup-restore",title:"Backup & Restore your Dijets Node files",description:"How to backup and restore your DijetsNodeGo files"},h=function(e){var o=e.children;return(0,n.jsx)(a.Z,{meta:d,children:o})},l=h;function p(e){var o=Object.assign({h1:"h1",p:"p",a:"a",h2:"h2",code:"code",h3:"h3",h4:"h4",em:"em"},(0,s.ah)(),e.components),t=o.Admonition;return t||u("Admonition",!0),i||u("CH",!1),i.Code||u("CH.Code",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"node-backup-and-restore",children:"Node Backup and Restore"}),"\n",(0,n.jsx)(o.p,{children:"It is always good practice and simply wise to make preparations for\ndisaster\nrecovery. Should your machine ever have a catastrophic failure due to either\nhardware or software issues, or even a case of natural disaster, it's best to be\nprepared for such a situation by making a backup of your DijetsNodeGo files."}),"\n",(0,n.jsx)(o.p,{children:"When running, a complete node installation along with the database can grow to\nbe multiple gigabytes in size. Having to back up and restore such a large volume\nof data can be expensive, complicated and time-consuming. Luckily, there is a\nbetter way."}),"\n",(0,n.jsx)(o.p,{children:"Instead of having to back up and restore everything, we need to back up only\nwhat is essential, that is, those files that cannot be reconstructed because\nthey are unique to your node. For DijetsNodeGo node, unique files are those that\nidentify your node on the network, in other words, files that define your\nNodeID."}),"\n",(0,n.jsx)(o.p,{children:"Even if your node is a validator on the network and has multiple delegations on\nit, you don't need to worry about backing up anything else, because the\nvalidation and delegation transactions are also stored on the blockchain and\nwill be restored during bootstrapping, along with the rest of the blockchain\ndata."}),"\n",(0,n.jsxs)(o.p,{children:["The installation itself can be easily recreated by installing the node on a new\nmachine, and all the remaining gigabytes of blockchain data can be easily\nrecreated by the process of bootstrapping, which copies the data over from other\nnetwork peers. However, if you would like to speed up the process, see the\n",(0,n.jsx)(o.a,{href:"#database",children:"Database Backup and Restore section"})]}),"\n",(0,n.jsx)(o.h2,{id:"nodeid",children:"NodeID"}),"\n",(0,n.jsxs)(o.p,{children:["NodeID is a unique identifier that differentiates your node from all the other\npeers on the network. It's a string formatted like\n",(0,n.jsx)(o.code,{children:"NodeID-7S2JhkGp7yKPzwpfd7KNwcM217ZuMzPFT"}),". You can look up the specs section to see how the NodeID is constructed\n",(0,n.jsx)(o.a,{href:"/guides/cryptographic-primitives#tls-addresses",children:"here"}),"."]}),"\n",(0,n.jsxs)(o.p,{children:["In the default installation, they can be found in the working directory,\nspecifically in ",(0,n.jsx)(o.code,{children:"~/.dijetsnodego/staking/"}),". All we need to do to recreate the\nnode on another machine is to run a new installation with those same two files."]}),"\n",(0,n.jsx)(o.h3,{id:"backup",children:"Backup"}),"\n",(0,n.jsxs)(o.p,{children:["To back up your node, we need to store ",(0,n.jsx)(o.code,{children:"staker.crt"})," and ",(0,n.jsx)(o.code,{children:"staker.key"})," files\nsomewhere safe and private, preferably to a different computer, to your private\nstorage in the cloud, a USB stick or similar. Storing them to a couple of\ndifferent, secure locations increases the safety."]}),"\n",(0,n.jsx)(o.p,{children:":::caution"}),"\n",(0,n.jsx)(o.p,{children:"If someone gets a hold of your staker files, they still cannot get to your\nfunds, as they are controlled by the wallet private keys, not by the node. But,\nthey could re-create your node somewhere else, and depending on the\ncircumstances make you lose the staking rewards. So make sure your staker files\nare secure."}),"\n",(0,n.jsx)(o.p,{children:":::"}),"\n",(0,n.jsx)(o.p,{children:"Let's get the staker files off the machine running the node."}),"\n",(0,n.jsx)(o.h4,{id:"from-local-node",children:"From Local Node"}),"\n",(0,n.jsx)(o.p,{children:"If you're running the node locally, on your desktop computer, just navigate to\nwhere the files are and copy them somewhere safe."}),"\n",(0,n.jsxs)(o.p,{children:["On a default Linux installation, the path to them will be\n",(0,n.jsx)(o.code,{children:"/home/USERNAME/.dijetsnodego/staking/"}),", where ",(0,n.jsx)(o.code,{children:"USERNAME"})," needs to be replaced\nwith the actual username running the node. Select and copy the files from there\nto a backup location. You don't need to stop the node to do that."]}),"\n",(0,n.jsxs)(o.h4,{id:"from-remote-node-using-scp",children:["From Remote Node Using ",(0,n.jsx)(o.code,{children:"scp"})]}),"\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.code,{children:"scp"})," is a 'secure copy' command line program, available built-in on Linux and\nMacOS computers. There is also a Windows version, ",(0,n.jsx)(o.code,{children:"pscp"}),", as part of the\n",(0,n.jsx)(o.a,{href:"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html",children:"PuTTY"})," package.\nIf using ",(0,n.jsx)(o.code,{children:"pscp"}),", in the following commands replace each usage of ",(0,n.jsx)(o.code,{children:"scp"})," with\n",(0,n.jsx)(o.code,{children:"pscp -scp"}),"."]}),"\n",(0,n.jsxs)(o.p,{children:["To copy the files from the node, you will need to be able to remotely log into\nthe machine. You can use account password, but the secure and recommended way is\nto use the SSH keys. The procedure for acquiring and setting up SSH keys is\nhighly dependent on your cloud provider and machine configuration. You can refer\nto our ",(0,n.jsx)(o.a,{href:"run-dijets-node-with-aws",children:"Amazon Web\nServices"}),"\nand ",(0,n.jsx)(o.a,{href:"run-dijets-node-with-azure",children:"Microsoft Azure"}),"\nsetup guides for those providers. Other providers will have similar procedures."]}),"\n",(0,n.jsx)(o.p,{children:"When you have means of remote login into the machine, you can copy the files\nover with the following command:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"scp -r ubuntu@PUBLICIP:/home/ubuntu/.dijetsnodego/staking ~/dijets_backup",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,n.jsxs)(o.p,{children:["This assumes the username on the machine is ",(0,n.jsx)(o.code,{children:"ubuntu"}),", replace with correct\nusername in both places if it is different. Also, replace ",(0,n.jsx)(o.code,{children:"PUBLICIP"})," with the\nactual public IP of the machine. If ",(0,n.jsx)(o.code,{children:"scp"})," doesn't automatically use your\ndownloaded SSH key, you can point to it manually:"]}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"scp -i /path/to/the/key.pem -r ubuntu@PUBLICIP:/home/ubuntu/.dijetsnodego/staking ~/dijets_backup",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,n.jsxs)(o.p,{children:["Once executed, this command will create ",(0,n.jsx)(o.code,{children:"dijets_backup"})," directory in you home\ndirectory and place staker files in it. You need to store them somewhere safe."]}),"\n",(0,n.jsx)(o.h3,{id:"restore",children:"Restore"}),"\n",(0,n.jsxs)(o.p,{children:["To restore your node from a backup, we need to do the reverse: restore\n",(0,n.jsx)(o.code,{children:"staker.key"})," and ",(0,n.jsx)(o.code,{children:"staker.crt"})," from the backup to the working directory of the\nnode."]}),"\n",(0,n.jsxs)(o.p,{children:["First, we need to do the usual\n",(0,n.jsx)(o.a,{href:"/guides/nodes/run-dijets-node-with-installer",children:"installation"})," of the node. This will\ncreate a new NodeID, which we need to replace. When the node is installed\ncorrectly, log into the machine where the node is running and stop it:"]}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"sudo systemctl stop dijetsnodego",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:"We're ready to restore the node."}),"\n",(0,n.jsx)(o.h4,{id:"to-local-node",children:"To Local Node"}),"\n",(0,n.jsxs)(o.p,{children:["If you're running the node locally, just copy the ",(0,n.jsx)(o.code,{children:"staker.key"})," and ",(0,n.jsx)(o.code,{children:"staker.crt"}),"\nfiles from the backup location into the working directory, which on the default\nLinux installation will be ",(0,n.jsx)(o.code,{children:"/home/USERNAME/.dijetsnodego/staking/"}),". Replace\n",(0,n.jsx)(o.code,{children:"USERNAME"})," with the actual username used to run the node."]}),"\n",(0,n.jsxs)(o.h4,{id:"to-remote-node-using-scp",children:["To Remote Node Using ",(0,n.jsx)(o.code,{children:"scp"})]}),"\n",(0,n.jsxs)(o.p,{children:["Again, the process is just the reverse operation. Using ",(0,n.jsx)(o.code,{children:"scp"})," we need to copy\nthe ",(0,n.jsx)(o.code,{children:"staker.key"})," and ",(0,n.jsx)(o.code,{children:"staker.crt"})," files from the backup location into the remote\nworking directory. Assuming the backed up files are located in the directory\nwhere the above backup procedure placed them:"]}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"scp ~/dijets_backup/staker.* ubuntu@PUBLICIP:/home/ubuntu/.dijetsnodego/staking",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:"Or if you need to specify the path to the SSH key:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"scp -i /path/to/the/key.pem ~/dijets_backup/staker.* ubuntu@PUBLICIP:/home/ubuntu/.dijetsnodego/staking",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,n.jsxs)(o.p,{children:["And again, replace ",(0,n.jsx)(o.code,{children:"ubuntu"})," with correct username if different, and ",(0,n.jsx)(o.code,{children:"PUBLICIP"}),"\nwith the actual public IP of the machine running the node, as well as the path\nto the SSH key if used."]}),"\n",(0,n.jsx)(o.h4,{id:"restart-the-node-and-verify",children:"Restart the Node and Verify"}),"\n",(0,n.jsx)(o.p,{children:"Once the files have been replaced, log into the machine and start the node using:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"sudo systemctl start dijetsnodego",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,n.jsxs)(o.p,{children:["You can now check that the node is restored with the correct NodeID by issuing\nthe ",(0,n.jsx)(o.a,{href:"/guides/node-apis/info-api#infogetnodeid",children:"getNodeID"})," API call in\nthe same console you ran the previous command:"]}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"curl -X POST --data '{",props:{}}]},{tokens:[{content:'    "jsonrpc":"2.0",',props:{}}]},{tokens:[{content:'    "id"     :1,',props:{}}]},{tokens:[{content:'    "method" :"info.getNodeID"',props:{}}]},{tokens:[{content:"}' -H 'content-type:application/json;' 127.0.0.1:9650/ext/info",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:"You should see your original NodeID. Restore process is done."}),"\n",(0,n.jsx)(o.h2,{id:"database",children:"Database"}),"\n",(0,n.jsx)(o.p,{children:"Normally, when starting a new node, you can just bootstrap from scratch.\nHowever, there are situations when you may prefer to reuse an existing database\n(ex: preserve keystore records, reduce sync time)."}),"\n",(0,n.jsxs)(o.p,{children:["This tutorial will walk you through compressing your node's\nDB and moving it to another computer using ",(0,n.jsx)(o.code,{children:"zip"})," and ",(0,n.jsx)(o.code,{children:"scp"}),"."]}),"\n",(0,n.jsx)(o.h3,{id:"database-backup",children:"Database Backup"}),"\n",(0,n.jsx)(o.p,{children:"First, make sure to stop DijetsNodeGo, run:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"sudo ",props:{style:{color:"var(--ch-3)"}}},{content:"systemctl stop dijetsnodego",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:":::warning\nYou must stop the Dijets node before you back up the database otherwise data\ncould become corrupted.\n:::"}),"\n",(0,n.jsxs)(o.p,{children:["Once the node is stopped, you can ",(0,n.jsx)(o.code,{children:"zip"})," the database directory to reduce the\nsize of the backup and speed up the transfer using ",(0,n.jsx)(o.code,{children:"scp"}),":"]}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"zip ",props:{style:{color:"var(--ch-3)"}}},{content:"-r ",props:{style:{color:"var(--ch-2)"}}},{content:"dijets_db_backup.zip .dijetsnodego/db",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.em,{children:"Note: It may take > 30 minutes to zip the node's DB."})}),"\n",(0,n.jsx)(o.p,{children:"Next, you can transfer the backup to another machine:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"scp ",props:{style:{color:"var(--ch-3)"}}},{content:"-r ",props:{style:{color:"var(--ch-2)"}}},{content:"ubuntu@PUBLICIP:/home/ubuntu/dijets_db_backup.zip ~/dijets_db_backup.zip",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsxs)(o.p,{children:["This assumes the username on the machine is ",(0,n.jsx)(o.code,{children:"ubuntu"}),", replace with correct\nusername in both places if it is different. Also, replace ",(0,n.jsx)(o.code,{children:"PUBLICIP"})," with the\nactual public IP of the machine. If ",(0,n.jsx)(o.code,{children:"scp"})," doesn't automatically use your\ndownloaded SSH key, you can point to it manually:"]}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"scp ",props:{style:{color:"var(--ch-3)"}}},{content:"-i ",props:{style:{color:"var(--ch-2)"}}},{content:"/path/to/the/key.pem ",props:{style:{color:"var(--ch-8)"}}},{content:"-r ",props:{style:{color:"var(--ch-2)"}}},{content:"ubuntu@PUBLICIP:/home/ubuntu/dijets_db_backup.zip ~/dijets_db_backup.zip",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsxs)(o.p,{children:["Once executed, this command will create ",(0,n.jsx)(o.code,{children:"dijets_db_backup.zip"})," directory in you home directory."]}),"\n",(0,n.jsx)(o.h3,{id:"database-restore",children:"Database Restore"}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.em,{children:'This tutorial assumes you have already completed "Database Backup" and have\na backup at ~/dijets_db_backup.zip.'})}),"\n",(0,n.jsxs)(o.p,{children:["First, we need to do the usual\n",(0,n.jsx)(o.a,{href:"/guides/nodes/run-dijets-node-with-installer",children:"installation"})," of the node. When the\nnode is installed correctly, log into the machine where the node is running and\nstop it:"]}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"sudo ",props:{style:{color:"var(--ch-3)"}}},{content:"systemctl stop dijetsnodego",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:":::warning\nYou must stop the Dijets node before you restore the database otherwise data\ncould become corrupted.\n:::"}),"\n",(0,n.jsx)(o.p,{children:"We're ready to restore the database. First, let's move the DB on the existing\nnode (you can remove this old DB later if the restore was successful):"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"mv ",props:{style:{color:"var(--ch-3)"}}},{content:".dijetsnodego/db .dijetsnodego/db-old",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsxs)(o.p,{children:["Next, we'll unzip the backup we moved from another node (this will place the\nunzipped files in ",(0,n.jsx)(o.code,{children:"~/.dijetsnodego/db"})," when the command is run in the home directory):"]}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"unzip ",props:{style:{color:"var(--ch-3)"}}},{content:"dijets_db_backup.zip",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:"After the database has been restored on a new node, use this command to start the node:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"sudo ",props:{style:{color:"var(--ch-3)"}}},{content:"systemctl start dijetsnodego",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:"Node should now be running from the database on the new instance. To check that\neverything is in order and that node is not bootstrapping from scratch (which\nwould indicate a problem), use:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"sudo ",props:{style:{color:"var(--ch-3)"}}},{content:"journalctl ",props:{style:{color:"var(--ch-8)"}}},{content:"-u ",props:{style:{color:"var(--ch-2)"}}},{content:"dijetsnodego ",props:{style:{color:"var(--ch-8)"}}},{content:"-f",props:{style:{color:"var(--ch-2)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:"The node should be catching up to the network and fetching a small number of\nblocks before resuming normal operation (all the ones produced from the time\nwhen the node was stopped before the backup)."}),"\n",(0,n.jsx)(o.p,{children:"Once the backup has been restored and is working as expected, the zip can be deleted:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"rm ",props:{style:{color:"var(--ch-3)"}}},{content:"dijets_db_backup.zip",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(o.h3,{id:"database-direct-copy",children:"Database Direct Copy"}),"\n",(0,n.jsx)(o.p,{children:"You may be in a situation where you don't have enough disk space to create the\narchive containing the whole database, so you cannot complete the backup process\nas described previously."}),"\n",(0,n.jsxs)(o.p,{children:["In that case, you can still migrate your database to a new computer, by using a\ndifferent approach: ",(0,n.jsx)(o.code,{children:"direct copy"}),". Instead of creating the archive, moving the\narchive and unpacking it, we can do all of that on the fly."]}),"\n",(0,n.jsxs)(o.p,{children:["To do so, you will need ",(0,n.jsx)(o.code,{children:"ssh"})," access from the destination machine (where you\nwant the database to end up) to the source machine (where the database currently\nis). Setting up ",(0,n.jsx)(o.code,{children:"ssh"})," is the same as explained for ",(0,n.jsx)(o.code,{children:"scp"})," earlier in the\ndocument."]}),"\n",(0,n.jsx)(o.p,{children:"Same as shown previously, you need to stop the node (on both machines):"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"sudo ",props:{style:{color:"var(--ch-3)"}}},{content:"systemctl stop dijetsnodego",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(t,{type:"caution",children:(0,n.jsx)(o.p,{children:"You must stop the Dijets node before you back up the database otherwise data\ncould become corrupted."})}),"\n",(0,n.jsx)(o.p,{children:"Then, on the destination machine, change to a directory where you would like to\nput the database files, enter the following command:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"ssh ",props:{style:{color:"var(--ch-3)"}}},{content:"-i ",props:{style:{color:"var(--ch-2)"}}},{content:"/path/to/the/key.pem ubuntu@PUBLICIP 'tar czf - .dijetsnodego/db' ",props:{style:{color:"var(--ch-8)"}}},{content:"| ",props:{style:{color:"var(--ch-7)"}}},{content:"tar ",props:{style:{color:"var(--ch-3)"}}},{content:"xvzf - ",props:{style:{color:"var(--ch-8)"}}},{content:"-C ",props:{style:{color:"var(--ch-2)"}}},{content:".",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsxs)(o.p,{children:["Make sure to replace the correct path to the key, and correct IP of the source\nmachine. This will compress the database, but instead of writing it to a file it\nwill pipe it over ",(0,n.jsx)(o.code,{children:"ssh"})," directly to the destination machine, where it will be\ndecompressed and written to disk. The process can take a long time depending upon the size of the database so please make sure it\ncompletes before continuing."]}),"\n",(0,n.jsx)(o.p,{children:"After copying is done, all you need to do now is move the database to the\ncorrect location on the destination machine. Assuming there is a default\nDijetsNodeGo node installation, we remove the old database and replace it with\nthe new one:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"rm ",props:{style:{color:"var(--ch-3)"}}},{content:"-rf ",props:{style:{color:"var(--ch-2)"}}},{content:"~/.dijetsnodego/db",props:{style:{color:"var(--ch-8)"}}}]},{tokens:[{content:"mv ",props:{style:{color:"var(--ch-3)"}}},{content:"db ~/.dijetsnodego/db",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:"You can now start the node on the destination machine:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"sudo ",props:{style:{color:"var(--ch-3)"}}},{content:"systemctl start dijetsnodego",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:"Node should now be running from the copied database. To check that everything is\nin order and that node is not bootstrapping from scratch (which would indicate a\nproblem), use:"}),"\n",(0,n.jsx)(i.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"sudo ",props:{style:{color:"var(--ch-3)"}}},{content:"journalctl ",props:{style:{color:"var(--ch-8)"}}},{content:"-u ",props:{style:{color:"var(--ch-2)"}}},{content:"dijetsnodego ",props:{style:{color:"var(--ch-8)"}}},{content:"-f",props:{style:{color:"var(--ch-2)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,n.jsx)(o.p,{children:"The node should be catching up to the network and fetching a small number of\nblocks before resuming normal operation (all the ones produced from the time\nwhen the node was stopped before the backup)."}),"\n",(0,n.jsxs)(o.p,{children:["If you have feedback on this tutorial, or anything else, send us a\nmessage on ",(0,n.jsx)(o.a,{href:"https://redirect.dijets.io/#/#dijets-support:dijets.org",children:"Qowalts"}),"."]})]})}function u(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}o.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,n.jsx)(l,Object.assign({},e,{children:(0,n.jsx)(p,e)}))}}},function(e){e.O(0,[2331,2499,9774,2888,179],(function(){return o=38800,e(e.s=o);var o}));var o=e.O();_N_E=o}]);