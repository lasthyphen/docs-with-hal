(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3400],{74976:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/nodes/run-dijets-node-with-aws",function(){return t(4557)}])},4557:function(e,n,t){"use strict";t.r(n),t.d(n,{CH:function(){return a},Page:function(){return h},chCodeConfig:function(){return c},meta:function(){return d}});var o=t(52322),s=t(3905),r=t(65854),i=t(72499),a={annotations:r.ds,Code:r.EK},c={staticMediaQuery:"not screen, (max-width: 768px)",theme:{name:"supabase",type:"from-css",tokenColors:[{scope:["comment","punctuation.definition.comment","string.comment"],settings:{foreground:"var(--ch-1)"}},{scope:["constant","entity.name.constant","variable.other.constant","variable.other.enummember","variable.language","entity"],settings:{foreground:"var(--ch-2)"}},{scope:["entity.name","meta.export.default","meta.definition.variable"],settings:{foreground:"var(--ch-3)"}},{scope:["variable.parameter.function","meta.jsx.children","meta.block","meta.tag.attributes","entity.name.constant","meta.object.member","meta.embedded.expression"],settings:{foreground:"var(--ch-4)"}},{scope:"entity.name.function",settings:{foreground:"var(--ch-5)"}},{scope:["entity.name.tag","support.class.component"],settings:{foreground:"var(--ch-6)"}},{scope:"keyword",settings:{foreground:"var(--ch-7)"}},{scope:["storage","storage.type"],settings:{foreground:"var(--ch-7)"}},{scope:["storage.modifier.package","storage.modifier.import","storage.type.java"],settings:{foreground:"var(--ch-4)"}},{scope:["string","string punctuation.section.embedded source"],settings:{foreground:"var(--ch-8)"}},{scope:"support",settings:{foreground:"var(--ch-2)"}},{scope:"meta.property-name",settings:{foreground:"var(--ch-2)"}},{scope:"variable",settings:{foreground:"var(--ch-3)"}},{scope:"variable.other",settings:{foreground:"var(--ch-4)"}},{scope:"invalid.broken",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.deprecated",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.illegal",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"invalid.unimplemented",settings:{foreground:"var(--ch-9)",fontStyle:"italic"}},{scope:"carriage-return",settings:{background:"var(--ch-7)",foreground:"var(--ch-10)",fontStyle:"italic underline"}},{scope:"message.error",settings:{foreground:"var(--ch-9)"}},{scope:"string variable",settings:{foreground:"var(--ch-2)"}},{scope:["source.regexp","string.regexp"],settings:{foreground:"var(--ch-8)"}},{scope:["string.regexp.character-class","string.regexp constant.character.escape","string.regexp source.ruby.embedded","string.regexp string.regexp.arbitrary-repitition"],settings:{foreground:"var(--ch-8)"}},{scope:"string.regexp constant.character.escape",settings:{foreground:"var(--ch-6)",fontStyle:"bold"}},{scope:"support.constant",settings:{foreground:"var(--ch-2)"}},{scope:"support.variable",settings:{foreground:"var(--ch-2)"}},{scope:"support.type.property-name.json",settings:{foreground:"var(--ch-6)"}},{scope:"meta.module-reference",settings:{foreground:"var(--ch-2)"}},{scope:"punctuation.definition.list.begin.markdown",settings:{foreground:"var(--ch-3)"}},{scope:["markup.heading","markup.heading entity.name"],settings:{foreground:"var(--ch-2)",fontStyle:"bold"}},{scope:"markup.quote",settings:{foreground:"var(--ch-6)"}},{scope:"markup.italic",settings:{foreground:"var(--ch-4)",fontStyle:"italic"}},{scope:"markup.bold",settings:{foreground:"var(--ch-4)",fontStyle:"bold"}},{scope:["markup.underline"],settings:{fontStyle:"underline"}},{scope:["markup.strikethrough"],settings:{fontStyle:"strikethrough"}},{scope:"markup.inline.raw",settings:{foreground:"var(--ch-2)"}},{scope:["markup.deleted","meta.diff.header.from-file","punctuation.definition.deleted"],settings:{background:"var(--ch-11)",foreground:"var(--ch-9)"}},{scope:["punctuation.section.embedded"],settings:{foreground:"var(--ch-7)"}},{scope:["markup.inserted","meta.diff.header.to-file","punctuation.definition.inserted"],settings:{background:"var(--ch-12)",foreground:"var(--ch-6)"}},{scope:["markup.changed","punctuation.definition.changed"],settings:{background:"var(--ch-13)",foreground:"var(--ch-3)"}},{scope:["markup.ignored","markup.untracked"],settings:{background:"var(--ch-2)",foreground:"var(--ch-14)"}},{scope:"meta.diff.range",settings:{foreground:"var(--ch-5)",fontStyle:"bold"}},{scope:"meta.diff.header",settings:{foreground:"var(--ch-2)"}},{scope:"meta.separator",settings:{foreground:"var(--ch-2)",fontStyle:"bold"}},{scope:"meta.output",settings:{foreground:"var(--ch-2)"}},{scope:["brackethighlighter.tag","brackethighlighter.curly","brackethighlighter.round","brackethighlighter.square","brackethighlighter.angle","brackethighlighter.quote"],settings:{foreground:"var(--ch-15)"}},{scope:"brackethighlighter.unmatched",settings:{foreground:"var(--ch-9)"}},{scope:["constant.other.reference.link","string.other.link"],settings:{foreground:"var(--ch-8)",fontStyle:"underline"}}],colors:{"editor.background":"var(--ch-16)","editor.foreground":"var(--ch-4)","editor.selectionBackground":"var(--ch-17)","editor.infoForeground":"var(--ch-18)","editor.rangeHighlightBackground":"var(--ch-19)","editorLineNumber.foreground":"var(--ch-20)","tab.activeBackground":"var(--ch-16)","tab.inactiveBackground":"var(--ch-21)","tab.activeForeground":"var(--ch-4)","tab.inactiveForeground":"var(--ch-15)","tab.border":"var(--ch-22)","tab.activeBorder":"var(--ch-16)","tab.activeBorderTop":"var(--ch-23)","tab.hoverBackground":"var(--ch-16)","tab.hoverForeground":"var(--ch-15)","editorGroupHeader.tabsBorder":"var(--ch-22)","editorGroupHeader.tabsBackground":"var(--ch-21)","list.inactiveSelectionBackground":"var(--ch-24)","list.inactiveSelectionForeground":"var(--ch-4)","list.hoverBackground":"var(--ch-25)","list.hoverForeground":"var(--ch-4)"}},lineNumbers:!0,showCopyButton:!0,autoImport:!0,skipLanguages:[],filepath:"/Users/saleemfareed/Documents/hal-docs/apps/docs/pages/guides/nodes/run-dijets-node-with-aws.mdx"},d={id:"nodes-run-dijets-node-with-aws",title:"Run a Dijets Node with AWS",description:"How to configure and run a Dijets Node on Amazon Web Services (AWS)"},h=function(e){var n=e.children;return(0,o.jsx)(i.Z,{meta:d,children:n})},l=h;function u(e){var n=Object.assign({h2:"h2",p:"p",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",h3:"h3"},(0,s.ah)(),e.components);return a||p("CH",!1),a.Code||p("CH.Code",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(n.p,{children:["This tutorial will guide you through setting up a Dijets node on ",(0,o.jsx)(n.a,{href:"https://aws.amazon.com/",children:"Amazon Web\nServices (AWS)"}),". Cloud services like AWS are a good way\nto ensure that your node is highly secure, available, and accessible."]}),"\n",(0,o.jsx)(n.p,{children:"To get started, you'll need:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"An AWS account"}),"\n",(0,o.jsx)(n.li,{children:"A terminal with which to SSH into your AWS machine"}),"\n",(0,o.jsx)(n.li,{children:"A place to securely store and back up files"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This tutorial assumes your local machine has a Unix style terminal. If you're on\nWindows, you'll have to adapt some of the commands used here."}),"\n",(0,o.jsx)(n.h2,{id:"log-into-aws",children:"Log Into AWS"}),"\n",(0,o.jsxs)(n.p,{children:["Signing up for AWS is outside the scope of this article, but Amazon has instructions ",(0,o.jsx)(n.a,{href:"https://aws.amazon.com/premiumsupport/knowledge-center/create-and-activate-aws-account",children:"here"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["It is highly recommended that you set up Multi-Factor Authentication on your\nAWS root user account to protect it. Amazon has documentation for this\n",(0,o.jsx)(n.a,{href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable_virtual.html#enable-virt-mfa-for-root",children:"here"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Once your account is set up, you should create a new EC2 instance. An EC2 is a\nvirtual machine instance in AWS's cloud. Go to the ",(0,o.jsx)(n.a,{href:"https://console.aws.amazon.com/",children:"AWS Management\nConsole"})," and enter the EC2 dashboard."]}),"\n",(0,o.jsxs)(n.p,{children:["To log into the EC2 instance, you will need a key on your local machine that\ngrants access to the instance. First, create that key so that it can be assigned\nto the EC2 instance later on. On the bar on the left side, under ",(0,o.jsx)(n.strong,{children:"Network &\nSecurity"}),", select ",(0,o.jsx)(n.strong,{children:"Key Pairs."})]}),"\n",(0,o.jsxs)(n.p,{children:["Select ",(0,o.jsx)(n.strong,{children:"Create key pair"})," to launch the key pair creation wizard."]}),"\n",(0,o.jsxs)(n.p,{children:["Name your key ",(0,o.jsx)(n.code,{children:"dijets"}),". If your local machine has MacOS or Linux, select the\n",(0,o.jsx)(n.code,{children:"pem"})," file format. If it's Windows, use the ",(0,o.jsx)(n.code,{children:"ppk"})," file format. Optionally, you\ncan add tags for the key pair to assist with tracking."]}),"\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.code,{children:"Create key pair"}),". You should see a success message, and the key file\nshould be downloaded to your local machine. Without this file, you will not be\nable to access your EC2 instance. ",(0,o.jsx)(n.strong,{children:"Make a copy of this file and put it on a\nseparate storage medium such as an external hard drive. Keep this file secret;\ndo not share it with others."})]}),"\n",(0,o.jsx)(n.h2,{id:"create-a-security-group",children:"Create a Security Group"}),"\n",(0,o.jsxs)(n.p,{children:["An AWS Security Group defines what internet traffic can enter and leave your EC2\ninstance. Think of it like a firewall. Create a new Security Group by selecting\n",(0,o.jsx)(n.strong,{children:"Security Groups"})," under the ",(0,o.jsx)(n.strong,{children:"Network & Security"})," drop-down."]}),"\n",(0,o.jsxs)(n.p,{children:["This opens the Security Groups panel. Click ",(0,o.jsx)(n.strong,{children:"Create security group"})," in the top\nright of the Security Groups panel."]}),"\n",(0,o.jsxs)(n.p,{children:["You'll need to specify what inbound traffic is allowed. Allow SSH traffic from\nyour IP address so that you can log into your EC2 instance. (Each time your ISP\nchanges your IP address, you will need to modify this rule. If your ISP changes\nregularly, you may allow SSH traffic from anywhere to avoid having to modify\nthis rule frequently.) Allow TCP traffic on port 9651 so your node can\ncommunicate with other nodes on the network. Allow TCP traffic on port 9650 from\nyour IP so you can make API calls to your node. ",(0,o.jsx)(n.strong,{children:"It's important that you only\nallow traffic on this port from your IP."})," If you allow incoming traffic from\nanywhere, this could be used as an denial of service attack vector. Finally,\nallow all outbound traffic."]}),"\n",(0,o.jsxs)(n.p,{children:["Add a tag to the new security group with key ",(0,o.jsx)(n.code,{children:"Name"})," and value",(0,o.jsx)(n.code,{children:"Dijets Security Group"}),". This will enable us to know what this security group is when we see it\nin the list of security groups."]}),"\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.code,{children:"Create security group"}),". You should see the new security group in the list of security groups."]}),"\n",(0,o.jsx)(n.h2,{id:"launch-an-ec2-instance",children:"Launch an EC2 Instance"}),"\n",(0,o.jsxs)(n.p,{children:["Now you're ready to launch an EC2 instance. Go to the EC2 Dashboard and select ",(0,o.jsx)(n.strong,{children:"Launch instance"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Select ",(0,o.jsx)(n.strong,{children:"Ubuntu 20.04 LTS (HVM), SSD Volume Type"})," for the operating system."]}),"\n",(0,o.jsxs)(n.p,{children:["Next, choose your instance type. This defines the hardware specifications of the\ncloud instance. In this tutorial we set up a ",(0,o.jsx)(n.strong,{children:"c5.2xlarge"}),". This should be more\nthan powerful enough since Dijets is a lightweight consensus protocol. To\ncreate a c5.2xlarge instance, select the ",(0,o.jsx)(n.strong,{children:"Compute-optimized"})," option from the\nfilter drop-down menu."]}),"\n",(0,o.jsx)(n.p,{children:"Select the checkbox next to the c5.2xlarge instance in the table."}),"\n",(0,o.jsxs)(n.p,{children:["Click the ",(0,o.jsx)(n.strong,{children:"Next: Configure Instance Details"})," button in the bottom right-hand corner."]}),"\n",(0,o.jsx)(n.p,{children:"The instance details can stay as their defaults."}),"\n",(0,o.jsx)(n.h3,{id:"add-storage-tags-security-group",children:"Add Storage, Tags, Security Group"}),"\n",(0,o.jsxs)(n.p,{children:["Click the ",(0,o.jsx)(n.strong,{children:"Next: Add Storage"})," button in the bottom right corner of the screen."]}),"\n",(0,o.jsx)(n.p,{children:"You need to add space to your instance's disk. You should start with at least\n700GB of disk space. Although upgrades to reduce disk usage are always in\ndevelopment, on average the database will continually grow, so you need to\nconstantly monitor disk usage on the node and increase disk space if needed."}),"\n",(0,o.jsxs)(n.p,{children:["Note that the image below shows 100GB as disk size, which was appropriate at the\ntime the screenshot was taken. You should check the current ",(0,o.jsx)(n.a,{href:"https://github.com/Dijets-Inc/dijetsnodego#installation",children:"recommended disk\nspace size"})," before\nentering the actual value here."]}),"\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.strong,{children:"Next: Add Tags"})," in the bottom right corner of the screen to add tags to\nthe instance. Tags enable us to associate metadata with our instance. Add a tag\nwith key ",(0,o.jsx)(n.code,{children:"Name"})," and value ",(0,o.jsx)(n.code,{children:"My Dijets Node"}),". This will make it clear what this\ninstance is on your list of EC2 instances."]}),"\n",(0,o.jsxs)(n.p,{children:["Now assign the security group created earlier to the instance. Choose ",(0,o.jsx)(n.strong,{children:"Select\nan existing security group"})," and choose the security group created earlier."]}),"\n",(0,o.jsxs)(n.p,{children:["Finally, click ",(0,o.jsx)(n.strong,{children:"Review and Launch"})," in the bottom right. A review page will\nshow the details of the instance you're about to launch. Review those, and if\nall looks good, click the blue ",(0,o.jsx)(n.strong,{children:"Launch"})," button in the bottom right corner of\nthe screen."]}),"\n",(0,o.jsxs)(n.p,{children:["You'll be asked to select a key pair for this instance. Select ",(0,o.jsx)(n.strong,{children:"Choose an\nexisting key pair"})," and then select the ",(0,o.jsx)(n.code,{children:"dijets"})," key pair you made earlier in\nthe tutorial. Check the box acknowledging that you have access to the ",(0,o.jsx)(n.code,{children:".pem"})," or\n",(0,o.jsx)(n.code,{children:".ppk"})," file created earlier (make sure you've backed it up!) and then click\nLaunch Instances."]}),"\n",(0,o.jsx)(n.p,{children:"You should see a new pop up that confirms the instance is launching!"}),"\n",(0,o.jsx)(n.h3,{id:"assign-an-elastic-ip",children:"Assign an Elastic IP"}),"\n",(0,o.jsxs)(n.p,{children:["By default, your instance will not have a fixed IP. Let's give it a fixed IP\nthrough AWS's Elastic IP service. Go back to the EC2 dashboard. Under ",(0,o.jsx)(n.strong,{children:"Network\n& Security,"})," select ",(0,o.jsx)(n.strong,{children:"Elastic IPs"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Select ",(0,o.jsx)(n.strong,{children:"Allocate Elastic IP address"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Select the region your instance is running in, and choose to use Amazon\u2019s pool\nof IPv4 addresses. Click ",(0,o.jsx)(n.strong,{children:"Allocate"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Select the Elastic IP you just created from the Elastic IP manager. From the\n",(0,o.jsx)(n.strong,{children:"Actions"})," drop-down, choose ",(0,o.jsx)(n.strong,{children:"Associate Elastic IP address"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Select the instance you just created. This will associate the new Elastic IP\nwith the instance and give it a public IP address that won't change."}),"\n",(0,o.jsx)(n.h2,{id:"set-up-dijetsnodego",children:"Set Up DijetsNodeGo"}),"\n",(0,o.jsxs)(n.p,{children:["Go back to the EC2 Dashboard and select ",(0,o.jsx)(n.code,{children:"Running Instances"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Select the newly created EC2 instance. This opens a details panel with information about the instance."}),"\n",(0,o.jsxs)(n.p,{children:["Copy the ",(0,o.jsx)(n.code,{children:"IPv4 Public IP"})," field to use later. From now on we call this value ",(0,o.jsx)(n.code,{children:"PUBLICIP"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Remember: the terminal commands below assume you're running Linux. Commands\nmay differ for MacOS or other operating systems. When copy-pasting a command\nfrom a code block, copy and paste the entirety of the text in the block."})}),"\n",(0,o.jsxs)(n.p,{children:["Log into the AWS instance from your local machine. Open a terminal (try shortcut\n",(0,o.jsx)(n.code,{children:"CTRL + ALT + T"}),") and navigate to the directory containing the ",(0,o.jsx)(n.code,{children:".pem"})," file you\ndownloaded earlier."]}),"\n",(0,o.jsxs)(n.p,{children:["Move the ",(0,o.jsx)(n.code,{children:".pem"})," file to ",(0,o.jsx)(n.code,{children:"$HOME/.ssh"})," (where ",(0,o.jsx)(n.code,{children:".pem"})," files generally live) with:"]}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"mv ",props:{style:{color:"var(--ch-3)"}}},{content:"dijets.pem ~/.ssh",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,o.jsx)(n.p,{children:"Add it to the SSH agent so that we can use it to SSH into your EC2 instance, and mark it as read-only."}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"ssh-add ",props:{style:{color:"var(--ch-3)"}}},{content:"~/.ssh/dijets.pem",props:{style:{color:"var(--ch-8)"}}},{content:"; ",props:{style:{color:"var(--ch-4)"}}},{content:"chmod ",props:{style:{color:"var(--ch-3)"}}},{content:"400 ",props:{style:{color:"var(--ch-2)"}}},{content:"~/.ssh/dijets.pem",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,o.jsxs)(n.p,{children:["SSH into the instance. (Remember to replace ",(0,o.jsx)(n.code,{children:"PUBLICIP"})," with the public IP field from earlier.)"]}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"ssh ubuntu@PUBLICIP",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,o.jsxs)(n.p,{children:["If the permissions are ",(0,o.jsx)(n.strong,{children:"not"})," set correctly, you will see the following error."]}),"\n",(0,o.jsx)(n.p,{children:"You are now logged into the EC2 instance."}),"\n",(0,o.jsx)(n.p,{children:"If you have not already done so, update the instance to make sure it has the\nlatest operating system and security updates:"}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"sudo apt update; sudo apt upgrade -y; sudo reboot",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,o.jsx)(n.p,{children:"This also reboots the instance. Wait 5 minutes, then log in again by running\nthis command on your local machine:"}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"ssh ",props:{style:{color:"var(--ch-3)"}}},{content:"ubuntu@PUBLICIP",props:{style:{color:"var(--ch-8)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,o.jsxs)(n.p,{children:["You're logged into the EC2 instance again. Now we\u2019ll need to set up our\nDijets node. Follow the ",(0,o.jsx)(n.a,{href:"run-dijets-node-with-installer-script",children:"Set Up Dijets Node With\nInstaller"})," tutorial or ",(0,o.jsx)(n.a,{href:"run-dijets-node-manually",children:"Run Dijets Node manually"}),"\nto run a Dijets Node instance. If using the installer script you will need the ",(0,o.jsx)(n.code,{children:"PUBLICIP"})," we set up earlier."]}),"\n",(0,o.jsxs)(n.p,{children:["Your DijetsNodeGo node should now be running and in the process of bootstrapping.\nTo check if it's done bootstrapping, you can issue an API call\nusing ",(0,o.jsx)(n.code,{children:"curl"}),". If you're making the request from the EC2 instance, the request\nis:"]}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"curl -X POST --data '{",props:{}}]},{tokens:[{content:'    "jsonrpc":"2.0",',props:{}}]},{tokens:[{content:'    "id"     :1,',props:{}}]},{tokens:[{content:'    "method" :"info.isBootstrapped",',props:{}}]},{tokens:[{content:'    "params": {',props:{}}]},{tokens:[{content:'        "chain":"X"',props:{}}]},{tokens:[{content:"    }",props:{}}]},{tokens:[{content:"}' -H 'content-type:application/json;' 127.0.0.1:9650/ext/info",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,o.jsx)(n.p,{children:"Once the node is finished bootstrapping, the response will be:"}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"{",props:{}}]},{tokens:[{content:'    "jsonrpc": "2.0",',props:{}}]},{tokens:[{content:'    "result": {',props:{}}]},{tokens:[{content:'        "isBootstrapped": true',props:{}}]},{tokens:[{content:"    },",props:{}}]},{tokens:[{content:'    "id": 1',props:{}}]},{tokens:[{content:"}",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,o.jsx)(n.p,{children:"You can continue on, even if DijetsNodeGo isn't done bootstrapping."}),"\n",(0,o.jsx)(n.p,{children:"In order to make your node a validator, you'll need its node ID. To get it, run:"}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"curl -X POST --data '{",props:{}}]},{tokens:[{content:'    "jsonrpc":"2.0",',props:{}}]},{tokens:[{content:'    "id"     :1,',props:{}}]},{tokens:[{content:'    "method" :"info.getNodeID"',props:{}}]},{tokens:[{content:"}' -H 'content-type:application/json;' 127.0.0.1:9650/ext/info",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,o.jsx)(n.p,{children:"The response contains the node ID."}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:'{"jsonrpc":"2.0","result":{"nodeID":"NodeID-DznHmm3o7RkmpLkWMn9NqafH66mqunXbM"},"id":1}',props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,o.jsxs)(n.p,{children:["In the above example the node ID is",(0,o.jsx)(n.code,{children:"NodeID-DznHmm3o7RkmpLkWMn9NqafH66mqunXbM"}),".\nCopy your node ID for later. Your node ID is not a secret, so you can just paste\nit into a text editor."]}),"\n",(0,o.jsxs)(n.p,{children:["DijetsNodeGo has other APIs, such as the ",(0,o.jsx)(n.a,{href:"/guides/node-apis/health-api",children:"Health\nAPI"}),", that may be used to interact with\nthe node. Some APIs are disabled by default. To enable such APIs, modify the\nExecStart section of ",(0,o.jsx)(n.code,{children:"/etc/systemd/system/dijetsnodego.service"})," (created during\nthe installation process) to include flags that enable these endpoints. Don't\nmanually enable any APIs unless you have a reason to."]}),"\n",(0,o.jsxs)(n.p,{children:["Back up the node's staking key and certificate in case the EC2 instance is\ncorrupted or otherwise unavailable. The node's ID is derived from its staking\nkey and certificate. If you lose your staking key or certificate then your node\nwill get a new node ID, which could cause you to become ineligible for a staking\nreward if your node is a validator. ",(0,o.jsx)(n.strong,{children:"It is very strongly advised that you copy\nyour node's staking key and certificate"}),". The first time you run a node, it\nwill generate a new staking key/certificate pair and store them in directory\n",(0,o.jsx)(n.code,{children:"/home/ubuntu/.dijetsnodego/staking"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Exit out of the SSH instance by running:"}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"exit",props:{style:{color:"var(--ch-2)"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,o.jsx)(n.p,{children:"Now you're no longer connected to the EC2 instance; you're back on your local machine."}),"\n",(0,o.jsxs)(n.p,{children:["To copy the staking key and certificate to your machine, run the following\ncommand. As always, replace ",(0,o.jsx)(n.code,{children:"PUBLICIP"}),"."]}),"\n",(0,o.jsx)(a.Code,{codeConfig:c,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"scp -r ubuntu@PUBLICIP:/home/ubuntu/.dijetsnodego/staking ~/aws_dijets_backup",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,o.jsxs)(n.p,{children:["Now your staking key and certificate are in directory ",(0,o.jsx)(n.code,{children:"~/aws_dijets_backup"})," .\n",(0,o.jsx)(n.strong,{children:"The contents of this directory are secret."})," You should hold this directory on\nstorage not connected to the internet (like an external hard drive.)"]}),"\n",(0,o.jsx)(n.h2,{id:"increase-volume-size",children:"Increase Volume Size"}),"\n",(0,o.jsx)(n.p,{children:"If you need to increase the volume size, follow these instructions from AWS:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/requesting-ebs-volume-modifications.html",children:"Request modifications to your EBS volumes"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html",children:"Extend a Linux file system after resizing a volume"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["We\nrecommend setting up AWS billing alerts so you can keep track of your billing and costs.\nIf you have feedback on this tutorial, or anything else, send us a\nmessage on ",(0,o.jsx)(n.a,{href:"https://redirect.dijets.io/#/#dijets-support:dijets.org",children:"Qowalts"}),"."]})]})}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,o.jsx)(l,Object.assign({},e,{children:(0,o.jsx)(u,e)}))}}},function(e){e.O(0,[2331,2499,9774,2888,179],(function(){return n=74976,e(e.s=n);var n}));var n=e.O();_N_E=n}]);