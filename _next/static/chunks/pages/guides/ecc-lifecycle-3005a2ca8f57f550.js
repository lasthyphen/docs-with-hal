(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7791],{5226:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/ecc-lifecycle",function(){return n(11981)}])},11981:function(e,t,n){"use strict";n.r(t),n.d(t,{Page:function(){return r},meta:function(){return s}});var o=n(52322),i=n(3905),a=n(72499),s={id:"ecc-lifecycle",title:"ECC Development Lifecyle",description:"What is the ECC Development Lifecycle",sidebar_label:"Overview"},r=function(e){var t=e.children;return(0,o.jsx)(a.Z,{meta:s,children:t})},l=r;function d(e){var t=Object.assign({p:"p",h2:"h2",h3:"h3",h4:"h4",a:"a",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"As you begin to learn more about ECCs and how they can benefit organisations, it's useful to look at the\ndevelopment lifecycle of an ECC from an idea all the way to its deployment."}),"\n",(0,o.jsx)(t.h2,{id:"determine-the-usecase-and-benefits",children:"Determine the usecase and benefits"}),"\n",(0,o.jsx)(t.p,{children:"The first step of planning your ECC is figuring out what your organisation or application's needs are. What features do you\nthink would be most beneficial and suited to your requirements. Do you wish to have your own Tokenomics for the ECC or do you prefer\nDJTX or any other asset as the gas or transaction fee for the network. Will it be a permissioned or open to pre-qualified validators only network.\nIn determining your exact requirements and whether ECCs are the best fit for them, you will have a much clearer sense of the direction you wish to take\nwhen lauching your ECC."}),"\n",(0,o.jsx)(t.h3,{id:"decide-what-type-of-ecc-to-build--launch",children:"Decide what type of ECC to build & launch."}),"\n",(0,o.jsx)(t.p,{children:"Once you've decided to use an ECC, you need to decide what type of ECC would best fit your requirements. This means\nchoosing the right virtual machine (VM) to create your ECC with. Currently there are three\nmain types of VMs to choose from:"}),"\n",(0,o.jsx)(t.h4,{id:"evm-based-ecc",children:"EVM-Based ECC"}),"\n",(0,o.jsxs)(t.p,{children:["EVM-based ECCs are forks of the Dijets Utility Chain. They support Solidity\nsmart contracts and all the standard ",(0,o.jsx)(t.a,{href:"/guides/node-apis/utility-chain-api#ethereum-apis",children:"Ethereum APIs"}),".\nECC EVMs are Dijets' implementation of an Ethereum Virtual Machine based chains."]}),"\n",(0,o.jsx)(t.p,{children:"Due to the depth and maturity of its developers community and tools, this virtual machine is by far the safest and\nmost widely used choice to build an ECC with. It also receives regular updates from Dijets Core team too."}),"\n",(0,o.jsx)(t.h4,{id:"experimental-ecc",children:"Experimental ECC"}),"\n",(0,o.jsx)(t.p,{children:"Experimental ECCs are built with VMs on the bleeding edge of distributed ledger technology.\nThese are proof-of-concept VMs developed by Dijets Core Team to see how far we can take some of the ideas\nfor a private blockchain or an ECC."}),"\n",(0,o.jsx)(t.p,{children:"These VMs are mostly alpha/beta software and aren't ready for production environments yet. Although they do receive periodic updates, Dijets team hasn't audited their performance and security, internally or externally. However, these\nopen source projects are intended to inspire the community, and provide novel capabilities not\navailable inside the EVM."}),"\n",(0,o.jsx)(t.p,{children:"If you're looking to push the boundaries of what's possible with ECCs, this is a great place to\nget started."}),"\n",(0,o.jsx)(t.h4,{id:"custom-ecc",children:"Custom ECC"}),"\n",(0,o.jsxs)(t.p,{children:["Custom ECCs are an open-ended interface that allow developers to build any VM they can dream.\nThese VMs may be a fork of an existing VM such as ECC-EVM, SpacesVM, or even a\nnon-Dijets-native VM such as Solana's virtual machine. Alternatively, you can build your VM\nentirely from scratch using almost any programming language. See ",(0,o.jsx)(t.a,{href:"introduction-to-vm",children:"Introduction to VMs"}),"\nfor advice on getting started."]}),"\n",(0,o.jsx)(t.h3,{id:"determine-tokenomics",children:"Determine Tokenomics"}),"\n",(0,o.jsx)(t.p,{children:"ECCs are powered by gas tokens. When you build an ECC, you have the option to decide what token\nyou use and optionally, how you distribute it. You may use DJTX, an existing Utility Chain token, or a\nbrand new token. You'll need to decide how much of the supply you want to use to reward validators,\nwhat kind of emitting schedule you want, and how much to airdrop. Blocks may burn transaction fees\nor give them to validators as a block reward."}),"\n",(0,o.jsx)(t.h3,{id:"decide-how-to-customise-your-ecc",children:"Decide how to customise your ECC"}),"\n",(0,o.jsx)(t.p,{children:"After you've selected your VM, you may want to customize it. This may mean airdropping tokens to\nyour team in the genesis, setting how gas fees rates on your network, or changing the\nbehavior of your VM via precompiles. These customizations are hard to get right on paper and usually\nrequire some trial and error to determine correctly."}),"\n",(0,o.jsx)(t.h2,{id:"learn-dijets-cli",children:"Learn Dijets-CLI"}),"\n",(0,o.jsx)(t.p,{children:"Now that you've specified your ECC requirements, the next step is learning Dijets-CLI."}),"\n",(0,o.jsxs)(t.p,{children:["Dijets-CLI is the best tool for rapidly prototyping ECCs and deploying them to production. You\ncan use it throughout the entire ECC development lifecycle. To get started, take a look at ",(0,o.jsx)(t.a,{href:"build-ecc",children:"Build\nYour First ECC"}),"."]}),"\n",(0,o.jsx)(t.h3,{id:"deploy-your-ecc-locally",children:"Deploy Your ECC Locally"}),"\n",(0,o.jsx)(t.p,{children:"The first stage of ECC development involves testing your ECC on your local machine or on a\nprivate cloud server such as Amazon EC2. The goal of this phase is to lock-in your ECC\ncustomizations and create your full-stack dapp without the constraints of deploying on a public\nnetwork."}),"\n",(0,o.jsx)(t.p,{children:"Development is extremely quick and updates take seconds to minutes to apply. In this phase,\nyou should restrict dapp access to trusted parties. Because you're interacting with a local copy of\nthe Dijets network, you can't access production state or other production ECCs."}),"\n",(0,o.jsx)(t.h3,{id:"deploy-your-ecc-to-dijets-testnet",children:"Deploy Your ECC to Dijets TestNet"}),"\n",(0,o.jsx)(t.p,{children:"The second stage of ECC development involves deploying your ECC and your dapp to the Dijets TestNet.\nThis phase tests your ability to run validator nodes, coordinate all parties involved in\nthe ECC, and monitor network health. You can also practice using Ledgers to manage ECC\ntransactions."}),"\n",(0,o.jsx)(t.p,{children:"The ECC is publicly visible and you may want to allow external users to test your\ndapp. Development on Dijets TestNet is significantly slower than with local development. Updates may now take\nhours to days to apply. It's important to do as much local testing as possible before moving to\nDijets TestNet."}),"\n",(0,o.jsx)(t.h3,{id:"deploy-your-ecc-to-mainnet",children:"Deploy Your ECC to Mainnet"}),"\n",(0,o.jsx)(t.p,{children:"The final stage of ECC development is creating your ECC on Mainnet and deploying your dapp.\nIt's time to let your real users in."}),"\n",(0,o.jsx)(t.p,{children:"Once your ECC is in production, you have little flexibility\nto change it. Some alterations are possible, but they require days to weeks to implement and roll\nout."}),"\n",(0,o.jsx)(t.p,{children:"Your focus should shift to preserving network stability and upgrading your nodes as needed."}),"\n",(0,o.jsx)(t.h2,{id:"start-developing-custom-vms",children:"Start Developing Custom VMs"}),"\n",(0,o.jsx)(t.p,{children:"If you've mastered ECC-EVM and are looking for an additional challenge, consider building a\ncustom VM. The Dijets network supports far more than just the EVM. Current VMs only scratch the\nsurface of what's possible."}),"\n",(0,o.jsx)(t.p,{children:"Some ideas:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Port an existing blockchain project to Dijets. For example: Use Bitcoin's VM or Solana's VM."}),"\n",(0,o.jsx)(t.li,{children:"Create an app-specific VM instead of a general purpose VM. For example, create a DEX\nor a CLOB VM instead of something like the EVM."}),"\n",(0,o.jsx)(t.li,{children:"Create a more efficient implementation of the EVM."}),"\n"]})]})}t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,o.jsx)(l,Object.assign({},e,{children:(0,o.jsx)(d,e)}))}}},function(e){e.O(0,[2331,2499,9774,2888,179],(function(){return t=5226,e(e.s=t);var t}));var t=e.O();_N_E=t}]);