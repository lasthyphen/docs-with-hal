(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3757],{41785:function(e,t,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/developer-toolchains/verify-smart-contracts-with-sourcify",function(){return i(44995)}])},44995:function(e,t,i){"use strict";i.r(t),i.d(t,{Page:function(){return a},meta:function(){return s}});var n=i(52322),r=i(3905),o=i(72499),s={id:"verify-smart-contracts-with-sourcify",title:"Verify Smart Contracts with Sourcify",description:"How to Verify Smart Contracts with Sourcify",sidebar_label:"Overview"},a=function(e){var t=e.children;return(0,n.jsx)(o.Z,{meta:s,children:t})},c=a;function l(e){var t=Object.assign({p:"p",a:"a",h2:"h2",ol:"ol",li:"li",strong:"strong",img:"img"},(0,r.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Sourcify is a Solidity source code and metadata verification tool and repository and acts as a base layer allowing other tools to build on top of it."}),"\n",(0,n.jsxs)(t.p,{children:["Along with contract verification through Dijets Utility Chain Explorer's GUI, developers can also use the ",(0,n.jsx)(t.a,{href:"https://sourcify.dev/",children:"Sourcify"})," API verification method to verify their smart contract code."]}),"\n",(0,n.jsx)(t.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,n.jsx)(t.p,{children:"Verify your contract using Sourcify:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Open the address page for the contract you want to verify, switch to ",(0,n.jsx)(t.strong,{children:"Code"})," tab, and then click  ",(0,n.jsx)(t.strong,{children:"Verify & Publish"})," button. ",(0,n.jsx)(t.img,{src:"/docs/img/verify2.png",alt:""})]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Choose ",(0,n.jsx)(t.strong,{children:"Sources and metadata JSON file"})," option and click the ",(0,n.jsx)(t.strong,{children:"Next"})," button. ",(0,n.jsx)(t.img,{src:"/docs/img/json-files.png",alt:""})," On the next screen, you will see a drop field where you can add files. ",(0,n.jsx)(t.img,{src:"/docs/img/drop-files.png",alt:""})]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Drag and drop (or click the button to browse and add files from your computer) all ",(0,n.jsx)(t.strong,{children:".sol"})," files used by the target contract you want to verify and the ",(0,n.jsx)(t.strong,{children:".json"})," file containing the contract's metadata. If your contract has linked libraries you should also drag & drop ",(0,n.jsx)(t.strong,{children:".json"})," files for those libraries. Once all the files have been added, start verification by clicking the ",(0,n.jsx)(t.strong,{children:"Verify & Publish"})," button."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"/docs/img/filed-added.png",alt:""})}),"\n",(0,n.jsx)(t.p,{children:"After a few seconds your contract should now be verified through Sourcify's API (If verification fails, you will see the reason in the dropzone). Verification metadata will be saved in the explorer's DB and you will see the verified contract page with the link to the same metadata in the Sourcify contract repository."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"/docs/img/contract-verified.png",alt:""})})]})}t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,n.jsx)(c,Object.assign({},e,{children:(0,n.jsx)(l,e)}))}}},function(e){e.O(0,[2331,2499,9774,2888,179],(function(){return t=41785,e(e.s=t);var t}));var t=e.O();_N_E=t}]);